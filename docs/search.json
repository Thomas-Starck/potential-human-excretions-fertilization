[
  {
    "objectID": "FAO.html",
    "href": "FAO.html",
    "title": "FAO data",
    "section": "",
    "text": "This prepares and presents FAO data, that we use to estimate the current potential of excretions used as fertilizers for different countries in the current food system.\n\n\nCode\nknitr::opts_chunk$set(message=F, warning=F, fig.align = \"center\",  dev='svg')\n\n# Load the function file\nsource(\"functions.R\")\n#included:\n#-function to save csv f_save_csv_files\n#-set the default scale_color and scale_fill to viridis theme\n#-loads the core tidyverse package\n\n#set theme for graphs\ntheme_set(\n  theme_classic() +\n  theme(\n    panel.grid.major.y = element_line(), #no vertical lines by default\n    #text = element_text(family = \"Times New Roman\"), #default font\n    plot.title = element_text(face=\"bold\"), #graphs titles in bolds\n    )\n  )\n\n#additional packages loaded\nlibrary(cowplot) #for multiple plots plot_grid\nlibrary(crosstalk) #for interactive selection of graphs\nlibrary(plotly) #for interactive graphs\n\nSource &lt;- \"Source:\"\n\n#to convert P2O5 and K2O fertilizers to P and K\nconversion_P2O5_P &lt;- 2*31/(31*2+16*5)\nconversion_K2O_K &lt;- 2*39/(2*39+16)\n\n#to convert protein supply to N\nconversion_N_protein &lt;- 6.25\n\n\n#function to clean Turkey and Côte d'Ivoire names not rendered by encoding\nf_correct_encoding &lt;- function(dataset){\n  dataset &lt;- dataset %&gt;%\n    mutate(\n      Area = case_when(\n        Area==\"T\\374rkiye\"  ~ \"Turkey\",\n        Area==\"C\\364te d'Ivoire\"   ~ \"Cote d'Ivoire\",\n        T~ Area\n      )\n    )\n}\n\n\n\nManure\nData downloaded on FAOSTAT webpage Inputs -&gt; Livestock manure. We load and prepare the data.\n\n\nCode\n#load original file\nfile_manure &lt;- read.csv(\"source/FAO/manure/Environment_LivestockManure_E_All_Data/Environment_LivestockManure_E_All_Data_NOFLAG.csv\", check.names = FALSE)\n#correct Turjey and Cote d'Ivoire encoding\nfile_manure &lt;- f_correct_encoding(file_manure)\n\n#transform and prepare data\ndata_manure_countries &lt;- file_manure %&gt;%\n  filter(\n    `Area Code` &lt; 5000 #keep only countries and not regions (Africa, World, Central Asia...)\n    )\n\ndata_manure_world &lt;- file_manure %&gt;%\n  filter(\n    `Area Code` == 5000 #world code\n    )\n\nf_prepare_manure &lt;- function(dataset){\n\n  data &lt;- dataset %&gt;%\n    select(\n      country = Area, species = Item, variable = Element, Unit, Y1961:Y2021\n    ) %&gt;%\n    #years in 1 column\n    gather(\n      Year, value, Y1961:Y2021\n    ) %&gt;%\n    mutate(\n      #gather units in variable name\n      variable = paste0(variable, \" (\", Unit, \")\"),\n      #transform years in integers\n      Year = as.integer(sub(\"^Y\", \"\", Year))\n    ) %&gt;%\n    #remove units columns\n    select(\n      -Unit\n    ) %&gt;%\n    #change names reported in kg to kt (or millions for animals)\n    mutate(\n      variable = str_replace_all(\n        variable,\n        c(\"\\\\(N content\\\\) \\\\(kg\\\\)\" = \"(ktN)\",\n          \"\\\\(An\\\\)\" = \"(millions)\",\n          \"\\\\(manure treated, N content\\\\) \\\\(kg\\\\)\" = \"(treated) (ktN)\"\n          )\n        )\n      ) %&gt;%\n    #change the numerical vallues accordingly\n    mutate(\n      value = value/10^6\n      )\n\n  return(data)\n\n}\ndata_manure_countries &lt;- f_prepare_manure(data_manure_countries)\ndata_manure_world &lt;- f_prepare_manure(data_manure_world)\n\n\n\nunderstand manure categoriesunderstand livestock speciesour simplified species\n\n\n\n\nCode\nf_graph_manure_comparison &lt;- function(\n    dataset, country_selected,\n    variable_total, variable_subcategories,\n    species_selected\n    ){\n\n  temp &lt;- dataset %&gt;%\n    filter(\n      country==country_selected,\n      species%in%species_selected\n      )\n\n  gg &lt;- ggplot() +\n    #subcategories in areas filled in different colors\n    geom_area(\n      data = temp %&gt;% filter(variable %in% variable_subcategories),\n      aes(Year, value, fill=variable),\n      alpha=.6\n      ) +\n    #total catogery in line\n    geom_line(\n      data = temp %&gt;% filter(variable == variable_total),\n      aes(Year, value, color=variable),\n      linewidth=1\n      ) +\n    #line total cateogry in black\n    scale_color_manual(\n      values=\"black\"\n      ) +\n    #spacing every 1000s on y axis\n    scale_y_continuous(\n      labels = scales::label_number(drop0trailing = TRUE)\n      ) +\n    #labels\n    labs(\n      color=\"\", x=\"\", y=\"ktN\",\n      fill=\"subgroups\",\n      title = country_selected,\n      caption = \"Source: FAOSTAT\\ncomputation by Thomas Starck\"\n    )\n\n  return(gg)\n\n}\n\n\n\nexcretedleft on pasturemanagement (treated)applied to soilssummary\n\n\namount excreted in manure = left on pasture + management (treated). This is generally true but there are some exceptions, like in India, probably because of free animals that do not excrete on pastures (on roads for instance).\n\nWorldFranceChinaUSAIndia\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  c(\"Manure management (treated) (ktN)\",\n    \"Manure left on pasture (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"France\",\n  \"Amount excreted in manure (ktN)\",\n  c(\"Manure management (treated) (ktN)\",\n    \"Manure left on pasture (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"China\",\n  \"Amount excreted in manure (ktN)\",\n  c(\"Manure management (treated) (ktN)\",\n    \"Manure left on pasture (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"United States of America\",\n  \"Amount excreted in manure (ktN)\",\n  c(\"Manure management (treated) (ktN)\",\n    \"Manure left on pasture (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"India\",\n  \"Amount excreted in manure (ktN)\",\n  c(\"Manure management (treated) (ktN)\",\n    \"Manure left on pasture (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nleft on pasture = left on pasture that leaches + left on pasture that volatilises + not reported. To have subcategories that match the total left on pasture, we compute the “Manure left on pasture not lost”.\n\nreported categoriesadditional computed “no lost”\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_world, \"World\",\n  \"Manure left on pasture (ktN)\",\n  c(\"Manure left on pasture that leaches (ktN)\",\n    \"Manure left on pasture that volatilises (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_compute_difference_manure_pasture &lt;- function(dataset){\n  dataset &lt;- dataset %&gt;%\n    spread(variable, value) %&gt;%\n    mutate(\n      `Manure left on pasture not lost (ktN)` =\n        `Manure left on pasture (ktN)` -\n        `Manure left on pasture that leaches (ktN)` -\n        `Manure left on pasture that volatilises (ktN)`\n      ) %&gt;%\n    gather(\n      variable, value, -c(country, species, Year)\n      )\n  return(dataset)\n}\ndata_manure_countries &lt;- f_compute_difference_manure_pasture(data_manure_countries)\ndata_manure_world &lt;- f_compute_difference_manure_pasture(data_manure_world)\n\n\nf_graph_manure_comparison(\n  data_manure_world, \"World\",\n  \"Manure left on pasture (ktN)\",\n  c(\"Manure left on pasture that leaches (ktN)\",\n    \"Manure left on pasture that volatilises (ktN)\",\n    \"Manure left on pasture not lost (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanagement (treated) ~ applied to soils + losses from manure treated. There are only small discrepancies in some countries (e.g. France).\n\nWorldFranceChinaUSAIndia\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_world, \"World\",\n  \"Manure management (treated) (ktN)\",\n  c(\"Losses from manure treated (ktN)\",\n    \"Manure applied to soils (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"France\",\n  \"Manure management (treated) (ktN)\",\n  c(\"Losses from manure treated (ktN)\",\n    \"Manure applied to soils (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"China\",\n  \"Manure management (treated) (ktN)\",\n  c(\"Losses from manure treated (ktN)\",\n    \"Manure applied to soils (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"United States of America\",\n  \"Manure management (treated) (ktN)\",\n  c(\"Losses from manure treated (ktN)\",\n    \"Manure applied to soils (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"India\",\n  \"Manure management (treated) (ktN)\",\n  c(\"Losses from manure treated (ktN)\",\n    \"Manure applied to soils (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\napplied to soils = applied to soils that leaches + applied to soils that volatilises + not reported. To have subcategories that match the total applied to soils, we compute the “Manure applied to soils not lost”.\n\nreported categoriesadditional computed “not lost”\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_world, \"World\",\n  \"Manure applied to soils (ktN)\",\n  c(\"Manure applied to soils that leaches (ktN)\",\n    \"Manure applied to soils that volatilises (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_compute_difference_manure_soils &lt;- function(dataset){\n  dataset &lt;- dataset %&gt;%\n    spread(variable, value) %&gt;%\n    mutate(\n      `Manure applied to soils not lost (ktN)` =\n        `Manure applied to soils (ktN)` -\n        `Manure applied to soils that leaches (ktN)` -\n        `Manure applied to soils that volatilises (ktN)`\n      ) %&gt;%\n    gather(\n      variable, value, -c(country, species, Year)\n      )\n  return(dataset)\n}\ndata_manure_countries &lt;- f_compute_difference_manure_soils(data_manure_countries)\ndata_manure_world &lt;- f_compute_difference_manure_soils(data_manure_world)\n\nf_graph_manure_comparison(\n  data_manure_world, \"World\",\n  \"Manure applied to soils (ktN)\",\n  c(\"Manure applied to soils that leaches (ktN)\",\n    \"Manure applied to soils that volatilises (ktN)\",\n    \"Manure applied to soils not lost (ktN)\"),\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere is the grand total with all the subcategories, including our computed “not lost” on soils and pasture.\n\n\nCode\nall_manure_categories &lt;- c(\n  \"Manure left on pasture not lost (ktN)\",\n  \"Manure left on pasture that leaches (ktN)\",\n  \"Manure left on pasture that volatilises (ktN)\",\n  \"Manure applied to soils not lost (ktN)\",\n  \"Manure applied to soils that leaches (ktN)\",\n  \"Manure applied to soils that volatilises (ktN)\",\n  \"Losses from manure treated (ktN)\")\n\n\n\nWorldFranceChinaUSAIndia\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  all_manure_categories,\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"France\",\n  \"Amount excreted in manure (ktN)\",\n  all_manure_categories,\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"China\",\n  \"Amount excreted in manure (ktN)\",\n  all_manure_categories,\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"United States of America\",\n  \"Amount excreted in manure (ktN)\",\n  all_manure_categories,\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_manure_comparison(\n  data_manure_countries, \"India\",\n  \"Amount excreted in manure (ktN)\",\n  all_manure_categories,\n  \"All Animals\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#function for graph livestock subcategories comparison\nf_graph_livestock_comparison &lt;- function(\n    dataset, country_selected,\n    variable_selected,\n    species_total, species_subcategories\n    ){\n\n  temp &lt;- dataset %&gt;%\n    filter(\n      country==country_selected,\n      variable==variable_selected\n      )\n\n  gg &lt;- ggplot() +\n    #subcategories in areas filled in different colors\n    geom_area(\n      data = temp %&gt;% filter(species %in% species_subcategories),\n      aes(Year, value, fill=species),\n      alpha=.6\n      ) +\n    #total catogery in line\n    geom_line(\n      data = temp %&gt;% filter(species == species_total),\n      aes(Year, value, color=species_total),\n      linewidth=1\n      ) +\n    #line total cateogry in black\n    scale_color_manual(\n      values=\"black\"\n      ) +\n    #spacing every 1000s on y axis\n    scale_y_continuous(\n      labels = scales::label_number(drop0trailing = TRUE)\n      ) +\n    #labes\n    labs(\n      color=\"\", x=\"\", y=\"ktN excreted\",\n      fill=\"subgroups\",\n      title = paste(species_total, \"excretions in\", country_selected),\n      caption = \"Source: FAOSTAT\\ncomputation by Thomas Starck\"\n    )\n\n  return(gg)\n\n}\n\n\n\nall animalssubgroups\n\n\n\n\nCode\nall_subspecies &lt;-\n  c(\n    \"Camels and Llamas\",\n    \"Cattle\",\n    \"Buffalo\",\n    \"Poultry Birds\",\n    \"Sheep and Goats\",\n    \"Swine\",\n    \"Horses\",\n    \"Mules and Asses\"\n  )\n\nall_subs_subspecies &lt;-\n  c(#Camels and Llamas\n    \"Camels\", \"Llamas\",\n    #Cattle\n    \"Cattle, dairy\",  \"Cattle, non-dairy\",\n    #Buffalo\n    \"Buffalo\",\n    #Poultry Birds\n    \"Ducks\", \"Turkeys\", \"Chickens, broilers\",  \"Chickens, layers\",\n    #Sheep and Goats\n    \"Sheep\", \"Goats\",\n    #Swine\n    \"Swine, breeding\",\"Swine, market\",\n    #Horses\n    \"Horses\",\n    #Mules and Asses\"\n    \"Asses\", \"Mules and hinnes\"\n    )\n\n\n\ncoarse subgroupsdetailed subgroups\n\n\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"All Animals\", all_subspecies\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"All Animals\", all_subs_subspecies\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncattlepoultry birdsmules and assescamels and llamassheep and goatswinebuffalohorses\n\n\ncattle = cattle dairy + cattle non dairy (does not include buffalo !)\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Cattle\", c(\"Cattle, dairy\", \"Cattle, non-dairy\")\n  )\n\n\n\n\n\n\n\n\n\n\n\npoultry birds = chickens + ducks + turkey. Chickens can be further detailed into broilers and layers subgroups.\n\nchickens groupedchickens detailed\n\n\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Poultry Birds\",\n  c(\"Chickens\", \"Ducks\", \"Turkeys\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Poultry Birds\",\n  c(\"Chickens, broilers\", \"Chickens, layers\", \"Ducks\", \"Turkeys\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMules and Asses = Asses + Mules and hinnies\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Mules and Asses\", c(\"Asses\", \"Mules and hinnies\")\n  )\n\n\n\n\n\n\n\n\n\n\n\nCamels and Llamas = Camels + Llamas\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Camels and Llamas\", c(\"Camels\", \"Llamas\")\n  )\n\n\n\n\n\n\n\n\n\n\n\nSheep and Goats = Sheep + Goats\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Sheep and Goats\", c(\"Sheep\", \"Goats\")\n  )\n\n\n\n\n\n\n\n\n\n\n\nSwine = Swine, breeding + Swine, market\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Swine\", c(\"Swine, breeding\", \"Swine, market\")\n  )\n\n\n\n\n\n\n\n\n\n\n\nbuffalo has no subgroups\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Buffalo\", c(\"Buffalo\")\n  )\n\n\n\n\n\n\n\n\n\n\n\nhorses has no subgroups\n\n\nCode\nf_graph_livestock_comparison(\n  data_manure_world, \"World\",\n  \"Amount excreted in manure (ktN)\",\n  \"Horses\", c(\"Horses\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe keep only the coarse subcategories for the main files, and also create a file with a simple ruminant / non ruminant distinction.\n\n\nCode\ndata_manure_world &lt;-data_manure_world %&gt;%\n  filter(species %in% c(all_subspecies, \"All Animals\"))\n\ndata_manure_countries &lt;-data_manure_countries %&gt;%\n  filter(species %in% c(all_subspecies, \"All Animals\"))\n\n\n\n\nCode\nspecies_ruminants &lt;- c(\"Buffalo\", \"Cattle\", \"Sheep and Goats\")\nspecies_non_ruminants &lt;- c(\"Poultry Birds\", \"Swine\", \"Camels and Llamas\", \"Horses\", \"Mules and Asses\")\n\nf_ruminants_summarize &lt;- function(dataset){\n  data &lt;- dataset %&gt;%\n    mutate(\n      species = case_when(\n        species %in% species_ruminants ~ \"ruminants\",\n        species %in%  species_non_ruminants ~ \"non ruminants\",\n        species == \"All Animals\" ~ \"All Animals\" ,\n        T~\"forget_species\" #test to see if forgotten species in the list of ruminants and monogastrics\n        )\n      ) %&gt;%\n    group_by(\n      country, Year, species, variable\n      ) %&gt;%\n    summarise_all(sum, na.rm=T)\n  return(data)\n}\ndata_manure_world_simple &lt;- f_ruminants_summarize(data_manure_world)\ndata_manure_countries_simple &lt;-f_ruminants_summarize(data_manure_countries)\n\n\nBelow is presented a recurrent feature: non ruminants excrete less than ruminants, but more of their manure is gathered to be spread on soils.\n\n\nCode\nf_graph_ruminants &lt;- function(\n    dataset, country_selected,\n    variable_subcategories, variable_total,\n    species_selected\n\n    ){\n\n  temp &lt;- dataset %&gt;%\n    filter(\n      country %in% country_selected,\n      species %in% species_selected\n      )\n  \n  temp &lt;- temp %&gt;%\n    mutate(\n      variable = case_when(\n        variable == \"Manure applied to soils (ktN)\" ~ \"Collected and\\napplied to soils\\n\",\n        variable == \"Losses from manure treated (ktN)\" ~ \"Collected but volatilized\\nduring storage\\n\",\n        variable == \"Manure left on pasture (ktN)\" ~ \"\\nLeft on pasture\\n\",\n        T ~ variable\n      )\n    )\n  \n  temp$variable &lt;- factor(\n    temp$variable,\n    levels = c(ordered_manure_categories, variable_total)\n  )\n\n  gg &lt;- ggplot() +\n    #subcategories in areas filled in different colors\n    geom_area(\n      data = temp %&gt;% filter(variable %in% variable_subcategories),\n      aes(Year, value, fill=variable),\n      alpha=.6\n      ) +\n    #total catogery in line\n    geom_line(\n      data = temp %&gt;% filter(variable == variable_total),\n      aes(Year, value, color=variable),\n      linewidth=1\n      ) +\n    #line total cateogry in black\n    scale_color_manual(\n      values=\"black\"\n      ) +\n    #spacing every 1000s on y axis\n    scale_y_continuous(\n      labels = scales::label_number(drop0trailing = TRUE)\n      ) +\n    #labels\n    labs(\n      color=\"\", x=\"\", y=\"ktN\",\n      fill=\"repartition of\\nexcreted manure\",\n      title = country_selected,\n      caption = \"Source: FAOSTAT\\ncomputation by Thomas Starck\"\n    ) +\n    facet_wrap(vars(species))\n\n  return(gg)\n}\n\nordered_manure_categories &lt;- c(\"\\nLeft on pasture\\n\", \"Collected but volatilized\\nduring storage\\n\", \"Collected and\\napplied to soils\\n\")\n\n\n\nWorldFranceChinaUSAcountries comparison\n\n\n\n\nCode\nf_graph_ruminants(\n  data_manure_world_simple, \"World\",\n  ordered_manure_categories,\n  \"Amount excreted in manure (ktN)\",\n  c(\"ruminants\", \"non ruminants\")\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_ruminants(\n  data_manure_countries_simple, \"France\",\n  ordered_manure_categories,\n  \"Amount excreted in manure (ktN)\",\n  c(\"ruminants\", \"non ruminants\")\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_ruminants(\n  data_manure_countries_simple, \"China\",\n  ordered_manure_categories,\n  \"Amount excreted in manure (ktN)\",\n  c(\"ruminants\", \"non ruminants\")\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_ruminants(\n  data_manure_countries_simple, \"United States of America\",\n  ordered_manure_categories,\n  \"Amount excreted in manure (ktN)\",\n  c(\"ruminants\", \"non ruminants\")\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_ruminants(\n  data_manure_countries_simple, c(\"China\", \"United States of America\", \"France\"),\n  ordered_manure_categories,\n  \"Amount excreted in manure (ktN)\",\n  c(\"ruminants\", \"non ruminants\")\n) +\n  facet_grid(country~species, scales=\"free_y\") +\n  labs(title = \"\", caption = \"based on FAOSTAT data\")\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"historical_manure_fate_China_USA_France\",\n  350, 6, 8\n)\n\n\n\n\n\n\n\n\n\n\nCode\nrm(file_manure, data_manure_countries, data_manure_world)\n\n\n\n\nMineral Fertilizers\nData downloaded on FAOSTAT webpage Inputs -&gt; Fertilizers by nutrient. We load and prepare the data.\n\n\nCode\n#load original file\nfile_fertilizers &lt;- read.csv(\"source/FAO/fertilizers/Inputs_FertilizersNutrient_E_All_Data/Inputs_FertilizersNutrient_E_All_Data_NOFLAG.csv\", check.names = FALSE)\n#correct turkey and cote d'ivoire encoding\nfile_fertilizers &lt;- f_correct_encoding(file_fertilizers)\n\n#transform and prepare data\ndata_fertilizers_countries &lt;- file_fertilizers %&gt;%\n  filter(\n    `Area Code` &lt; 5000 #keep only countries and not regions (Africa, World, Central Asia...)\n    )\n\ndata_fertilizers_world &lt;- file_fertilizers %&gt;%\n  filter(\n    `Area Code` == 5000 #world world\n    )\n\n\nf_prepare_fertilizers &lt;- function(dataset){\n\n\n  #transform and prepare data\n  data &lt;- dataset %&gt;%\n\n    #selects variables of interest, rename them\n    select(\n      country = Area, nutrient = Item, variable = Element, Unit, Y1961:Y2021\n      ) %&gt;%\n\n    #years in 1 column\n    gather(\n      Year, value, Y1961:Y2021\n      ) %&gt;%\n\n    mutate(\n\n      #add units in variable name\n      variable = paste0(variable, \" (\", Unit, \")\"),\n\n      #transform years into integers\n      Year = as.integer(sub(\"^Y\", \"\", Year)),\n\n      #convert P2O5 and K2O to P and K\n      value = case_when(\n        nutrient == \"Nutrient phosphate P2O5 (total)\" ~ value*conversion_P2O5_P,\n        nutrient == \"Nutrient potash K2O (total)\" ~ value*conversion_K2O_K,\n        nutrient == \"Nutrient nitrogen N (total)\" ~ value**1\n        ),\n\n      #change nutrient names\n      nutrient = case_when(\n        nutrient == \"Nutrient phosphate P2O5 (total)\" ~ \"P total\",\n        nutrient == \"Nutrient potash K2O (total)\" ~ \"K total\",\n        nutrient == \"Nutrient nitrogen N (total)\" ~ \"N total\"\n        )\n      ) %&gt;%\n\n    #remove units columns\n    select(\n      -Unit\n      ) %&gt;%\n\n    #spread variables into columns\n    spread(\n      variable, value\n      ) %&gt;%\n\n    #change values from kg to kt\n    mutate(\n      `Agricultural Use (t)` = `Agricultural Use (t)`/10^3,\n      `Export Quantity (t)` = `Export Quantity (t)`/10^3,\n      `Import Quantity (t)` = `Import Quantity (t)`/10^3,\n      `Production (t)` = `Production (t)`/10^3\n      ) %&gt;%\n\n    #rename variables accordingly\n    mutate(\n      `Agricultural Use (kt)` = `Agricultural Use (t)`,\n      `Export Quantity (kt)` = `Export Quantity (t)`,\n      `Import Quantity (kt)` = `Import Quantity (t)`,\n      `Production (kt)` = `Production (t)`\n      )\n\n  return(data)\n\n}\ndata_fertilizers_countries &lt;- f_prepare_fertilizers(data_fertilizers_countries)\ndata_fertilizers_world &lt;- f_prepare_fertilizers(data_fertilizers_world)\n\n\n\nUnderstand use/production/import/export\n\n\nAgricultural Use ~ Production - Export + Import. the small differences between the 2 quantities are due to variations in stocks.\n\n\nCode\n# graph comparison Use vs Export / Import / Production with 2 lines\nggplot(data_fertilizers_countries %&gt;% filter(country==\"France\")) +\n  geom_line(\n    aes(\n      Year, `Agricultural Use (kt)`,\n      color = \"agricultural use\"\n      )\n    ) +\n  geom_line(\n    aes(\n      Year,\n      (-`Export Quantity (kt)` + `Import Quantity (kt)` + `Production (kt)`),\n      color = \"prod - export + import\",\n      )\n    ) +\n  facet_wrap(vars(nutrient), ncol=2)  +\n  theme(\n    legend.position = c(.75, .25)\n  ) +\n  labs(\n    x=\"\", y= \"ktons\", color=\"\",\n    title = \"Comparison of use with prod/export/import\",\n    subtitle = \"small differences can be due to stocks\",\n    caption = \"Source: FAOSTAT\\ncomputation by Thomas Starck\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# file for Export / Import / Production Areas\ntemp &lt;- data_fertilizers_countries %&gt;%\n  filter(country==\"France\") %&gt;%\n  select(\n    country, Year, nutrient,\n    `Export Quantity (kt)`, `Import Quantity (kt)`, `Production (kt)`\n    ) %&gt;%\n  mutate(\n    `Export Quantity (kt)` = -`Export Quantity (kt)`\n  ) %&gt;%\n  gather(\n    variable, value, -c(country, Year, nutrient)\n  )\n\n#graph comparison Use vs Export / Import / Production Areas\nggplot(data_fertilizers_countries %&gt;% filter(country==\"France\")) +\n  geom_line(\n    aes(Year, `Agricultural Use (kt)`, color=\"Agricultural Use\")\n    ) +\n  geom_area(\n    data = temp,\n    aes(Year, value, fill=variable),\n    alpha=.6\n  ) +\n  facet_wrap(\n    vars(nutrient), ncol=2\n    ) +\n  theme(\n    legend.position = c(0.75, 0.25)\n  ) +\n  labs(\n    y=\"ktons\", fill=\"\", color=\"\", x=\"\"\n  ) +\n  #spacing every 1000s on y axis\n    scale_y_continuous(\n      labels = scales::label_number(drop0trailing = TRUE)\n      )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nrm(file_fertilizers)\n\n\n\n\nCropland nutrient balance\nData downloaded on FAOSTAT webpage Sustainability Indicators -&gt; Cropland Nutrient Balance. We load and prepare the data.\n\n\nCode\n#load FAO cropland balance\nfile_cropland_balance &lt;- read.csv(\"source/FAO/cropland_nutrient_balance/Environment_Cropland_nutrient_budget_E_All_Data/Environment_Cropland_nutrient_budget_E_All_Data_NOFLAG.csv\", check.names = FALSE)\n#correct turkey and cote d'ivoire encoding\nfile_cropland_balance &lt;- f_correct_encoding(file_cropland_balance)\n\n#transform and prepare data\ndata_balance_countries &lt;- file_cropland_balance %&gt;%\n  filter(\n    `Area Code` &lt; 5000 #keep only countries and not regions (Africa, World, Central Asia...)\n    )\n\ndata_balance_world &lt;- file_cropland_balance %&gt;%\n  filter(\n    `Area Code` == 5000 #world code\n    )\n\nf_prepare_balance &lt;- function(dataset){\n\n  data &lt;- dataset %&gt;%\n    select(\n      country = Area, flows = Item, variable = Element, Unit, Y1961:Y2021\n    ) %&gt;%\n    #years in 1 column\n    gather(\n      Year, value, Y1961:Y2021\n    ) %&gt;%\n    mutate(\n      #gather units in variable name\n      variable = paste0(variable, \" (\", Unit, \")\"),\n      #transform years in integers\n      Year = as.integer(sub(\"^Y\", \"\", Year))\n    ) %&gt;%\n    #remove units columns\n    select(\n      -Unit\n    )\n\n  return(data)\n\n}\ndata_balance_countries &lt;- f_prepare_balance(data_balance_countries) %&gt;% spread(variable, value)\ndata_balance_world &lt;- f_prepare_balance(data_balance_world) %&gt;% spread(variable, value)\n\n\n\nInput and Output flowsNutrient balance and use efficiency\n\n\n\n\nCode\n#order of legend labels\nordered_input_flows &lt;- c(\"Seed\", \"Atmospheric Deposition\", \"Biological Fixation\", \"Manure applied to Soils\", \"Mineral fertilizers\")\nordered_output_flows &lt;- c(\"Leaching\", \"Volatilisation\", \"Crop Removal\")\n\n#function for graph inputs flows\nf_graph_inputs &lt;- function(country_selected, nutrient_name, nutrient_label){\n\n  #inputs flows, in selected country\n  temp &lt;- data_balance_countries %&gt;%\n    filter(\n      country%in%country_selected,\n      flows %in% ordered_input_flows\n      )\n  #order input flows legend, in selected country\n  temp$flows &lt;- factor(\n    temp$flows,\n    levels = ordered_input_flows\n  )\n\n  #total input, in selected country\n  temp2 &lt;- data_balance_countries %&gt;%\n    filter(\n      country%in%country_selected,\n      flows==\"Input\"\n      )\n\n\n  #graph\n  gg1 &lt;- ggplot(temp2) +\n\n    #different input flows area\n    geom_area(\n      data = temp,\n      aes(Year, {{ nutrient_name }}/10^3, fill=flows),\n      alpha=.7\n      ) +\n\n    #total inputs line\n    geom_line(\n      aes(Year, {{ nutrient_name }}/10^3, color=\" input\"),\n      size=1.5\n      ) +\n    scale_color_manual(\n      values = c(\"black\")\n      ) +\n\n    #labels\n    labs(\n      title = paste(nutrient_label, \"inputs balance on croplands,\", country_selected),\n      fill=paste(\"input flows\"),\n      color=\"\", y=paste0(\"kt\", nutrient_label), x=\"\"\n      )\n\n  return(gg1)\n}\n\n#function for graph outputs flows\nf_graph_output &lt;- function(country_selected, nutrient_name, nutrient_label){\n\n  #outputs in selected country\n  temp &lt;- data_balance_countries %&gt;%\n    filter(\n      country==country_selected,\n      flows %in% ordered_output_flows\n      )\n  #order output flows legend, in selected country\n  temp$flows &lt;- factor(\n    temp$flows,\n    levels = ordered_output_flows\n  )\n\n  #total outputs by FAO definition, in selected country\n  temp2 &lt;- data_balance_countries %&gt;%\n    filter(\n      country==country_selected,\n      flows==\"Outputs\"\n      )\n\n  #total inputs, in selected country\n  temp3 &lt;- data_balance_countries %&gt;%\n    filter(\n      country==country_selected,\n      flows==\"Input\"\n      )\n\n  #graph\n  gg &lt;- ggplot(temp2) +\n\n    #different output flows area\n    geom_area(\n      data = temp,\n      aes(Year, {{ nutrient_name }}/10^3, fill=flows),\n      alpha=.7\n      ) +\n\n    #total output line by FAO definition\n    geom_line(\n      aes(Year, {{ nutrient_name }}/10^3, color='output, by\\nFAO definition'),\n      size=1, linetype=\"dotted\"\n      ) +\n\n    #total inputs line\n    geom_line(\n      data = temp3,\n      aes(Year, {{ nutrient_name }}/10^3, color=\"input\"), size=2\n      ) +\n    scale_color_manual(values = c(\"black\", \"black\")) +\n\n    #labels\n    labs(\n      title = paste(nutrient_label, \"output balance on croplands,\", country_selected),\n      fill=paste(\"output flows\"),\n      color=\"\", y=paste0(\"kt\", nutrient_label), x=\"\"\n      )\n\n  return(gg)\n\n}\n\n#function for graph inputs outputs flows side by side\nf_graph_inputs_outputs &lt;- function(country_selected, nutrient_name, nutrient_label){\n\n  plot_grid(\n    f_graph_inputs(country_selected, {{ nutrient_name }}, nutrient_label),\n    f_graph_output(country_selected, {{ nutrient_name }}, nutrient_label),\n    nrow = 2, align = \"v\"\n    )\n}\n\n\n#save graph with example countries for thesis manuscript\ngg &lt;- f_graph_inputs(c(\"France\", \"Italy\", \"Japan\"), `Cropland nitrogen (t)`, \"N\") + \n  facet_wrap(vars(country), ncol=1, scales = \"free_y\") +\n  labs(title = \"N inputs on croplands\", caption=\"based on FAOSTAT data for 2015-2020\")\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"historical_inputs_France_Italy_Japan\",\n  350, 6, 8\n)\n\n\nOutput flows in FAO’s definition is the crop removal. The difference between inputs and crop removal, leaching and volatilization is what is left in the soil (crop residues, organic matter…).\n\nFranceIndia\n\n\n\nNPK\n\n\n\n\nCode\nf_graph_inputs_outputs(\"France\", `Cropland nitrogen (t)`, \"N\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_inputs_outputs(\"France\", `Cropland phosphorus (t)`, \"P\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_inputs_outputs(\"France\", `Cropland potassium (t)`, \"K\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNPK\n\n\n\n\nCode\nf_graph_inputs_outputs(\"India\", `Cropland nitrogen (t)`, \"N\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_inputs_outputs(\"India\", `Cropland phosphorus (t)`, \"P\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_inputs_outputs(\"India\", `Cropland potassium (t)`, \"K\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#function to compare balance reported by FAO to input-output\nf_graph_balance &lt;- function(country_selected, nutrient_name, nutrient_label){\n\n  #get balance values for selected country\n  temp &lt;- data_balance_countries %&gt;%\n    filter(flows==\"Nutrient balance\", country==country_selected)\n\n  #get input values for selected country\n  temp2 &lt;- data_balance_countries %&gt;%\n    filter(\n      country==country_selected,\n      flows==\"Input\"\n      )\n\n  #get output values for selected country\n  temp3 &lt;- data_balance_countries %&gt;%\n    filter(\n      country==country_selected,\n      flows==\"Outputs\"\n      )\n\n  #graph comparing balance to output/input\n  ggplot(temp) +\n\n    #balance area\n    geom_area(\n      aes(Year, {{ nutrient_name }}/10^3, fill=\"balance\"),\n      alpha=.7\n      ) +\n    scale_fill_manual(values = \"#440154\") +\n\n    #output/input line\n    geom_line(\n      aes(\n        x=temp2$Year, color=\"input-output\",\n        y=(temp2 %&gt;% pull({{ nutrient_name }})-temp3 %&gt;% pull({{ nutrient_name }}))/10^3\n        ),\n      linewidth=1.5\n      ) +\n    scale_color_manual(values = \"black\") +\n\n    #labels\n    labs(\n      x=\"\", y=paste0(\"kt\", nutrient_label), fill=\"\", color=\"\",\n      title = paste(nutrient_label, \"cropland balance,\", country_selected)\n      )\n\n}\n\n#function to compare nutrient use efficiency reported by FAO to output/input\nf_graph_nutrient_use_efficiency &lt;- function(country_selected, nutrient_use_efficiency, nutrient_name, nutrient_label){\n\n  #get balance values for selected country\n  temp &lt;- data_balance_countries %&gt;%\n    filter(flows==\"Nutrient balance\", country==country_selected)\n\n  #get input values for selected country\n  temp2 &lt;- data_balance_countries %&gt;%\n    filter(\n      country==country_selected,\n      flows==\"Input\"\n      )\n\n  #get output values for selected country\n  temp3 &lt;- data_balance_countries %&gt;%\n    filter(\n      country==country_selected,\n      flows==\"Outputs\"\n      )\n\n  #graph comparing balance to output/input\n  ggplot(temp) +\n\n    #balance area\n    geom_area(\n      aes(Year, {{ nutrient_use_efficiency }}, fill=\"nutrient use\\nefficiency\"),\n      alpha=.7\n      ) +\n    scale_fill_manual(values = \"#440154\") +\n\n    #output/input line\n    geom_line(\n      aes(\n        x=temp2$Year, color=\"output/input\",\n        y=( temp3 %&gt;% pull({{ nutrient_name }})/temp2 %&gt;% pull({{ nutrient_name }}) )*100\n        ),\n      linewidth=1.5\n      ) +\n    scale_color_manual(values = \"black\") +\n\n    #labels\n    labs(\n      x=\"\", y=\"%\", fill=\"\", color=\"\",\n      title = paste(\"Cropland\", nutrient_label, \"use efficiency,\", country_selected)\n      )\n\n}\n\n#function to plot the 2 graphs side by side\nf_graph_balance_nutrient_use_efficiency &lt;- function(country_selected, nutrient_use_efficiency, nutrient_name, nutrient_label){\n\n  plot_grid(\n    f_graph_balance(country_selected, {{ nutrient_name }}, nutrient_label),\n    f_graph_nutrient_use_efficiency(country_selected, {{ nutrient_use_efficiency }}, {{ nutrient_name }}, nutrient_label),\n    nrow=2, align=\"v\"\n    )\n\n}\n\n\nThe nutrient balance is the difference between total inputs and outputs (i.e. crop removals). The nutrient use efficiency is the ration between outputs and inputs.\n\nFranceIndia\n\n\n\nNPK\n\n\n\n\nCode\nf_graph_balance_nutrient_use_efficiency(\"France\", `Cropland nitrogen use efficiency (%)`, `Cropland nitrogen (t)`, \"N\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_balance_nutrient_use_efficiency(\"France\", `Cropland phosphorus use efficiency (%)`, `Cropland phosphorus (t)`, \"P\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_balance_nutrient_use_efficiency(\"France\", `Cropland potassium use efficiency (%)`, `Cropland potassium (t)`, \"K\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNPK\n\n\n\n\nCode\nf_graph_balance_nutrient_use_efficiency(\"India\", `Cropland nitrogen use efficiency (%)`, `Cropland nitrogen (t)`, \"N\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_balance_nutrient_use_efficiency(\"India\", `Cropland phosphorus use efficiency (%)`, `Cropland phosphorus (t)`, \"P\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_balance_nutrient_use_efficiency(\"India\", `Cropland potassium use efficiency (%)`, `Cropland potassium (t)`, \"K\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#remove temporary file\nrm(file_cropland_balance)\n\n\n\n\nFood Supply\nFood availability for 2010-2021. Data downloaded on FAOSTAT webpage Inputs -&gt; Availability, based on supply utilization accounts. We load and prepare the data.\n\n\nCode\n#load original file\nfile_food_supply_availability &lt;- read.csv(\"source/FAO/food_supply/availability_2010_2021/Supply_Utilization_Accounts_Food_and_Diet_E_All_Data/Supply_Utilization_Accounts_Food_and_Diet_E_All_Data_NOFLAG.csv\", check.names = FALSE)\n#correct turkey and cote d'ivoire encoding\nfile_food_supply_availability &lt;- f_correct_encoding(file_food_supply_availability)\n\nf_prepare_food_availability &lt;- function(dataset){\n  #transform and prepare data\n  data &lt;- dataset %&gt;%\n    filter(\n      \n      #we do not dive into food subcategories\n      `Food Group` == \"All food groups\" \n      ) %&gt;%\n    \n    #selects variables of interest, rename them\n    select(\n      country = Area, nutrient = Indicator, Unit, Y2010:Y2021\n      ) %&gt;%\n    \n    filter(\n      #focus only on N, P and K\n      nutrient %in% c(\n        \"Protein supply\", \"Phosphorus supply\", \"Potassium supply\"\n        )\n      ) %&gt;%\n    \n    #years in 1 column\n    gather(\n      Year, value, Y2010:Y2021\n      ) %&gt;%\n    mutate(\n      \n      #add units to variable name\n      nutrient = paste0(nutrient, \" (\", Unit, \")\"),\n      \n      #transform years in integers\n      Year = as.integer(sub(\"^Y\", \"\", Year))\n    ) %&gt;%\n    \n    #remove units columns\n    select(\n      -Unit\n    ) %&gt;%\n    \n    #spread variables into columns\n    spread(\n      nutrient, value\n    )\n  \n  return(data)\n}\n\ndata_food_supply_availability &lt;- f_prepare_food_availability(file_food_supply_availability)\n\n#convert proteins to N\ndata_food_supply_availability &lt;- data_food_supply_availability %&gt;%\n  mutate(\n    `Nitrogen supply (g/cap/d)` = `Protein supply (g/cap/d)`/conversion_N_protein\n  )\n\n#conversion g or mg per day to kg per year, keep only these latters\ndata_food_supply_availability &lt;- data_food_supply_availability %&gt;%\n  mutate(\n    `N supply (kg/cap/y)` = `Nitrogen supply (g/cap/d)`*365/1000,\n    `P supply (kg/cap/y)` = `Phosphorus supply (mg/cap/d)`*365/10^6,\n    `K supply (kg/cap/y)` = `Potassium supply (mg/cap/d)`*365/10^6\n  ) %&gt;%\n  select(\n    country, Year, \n    `N supply (kg/cap/y)`, `P supply (kg/cap/y)`, `K supply (kg/cap/y)`\n  )\n\n\nFood balances for 2010-2021 and 1961-2010. Data downloaded on FAOSTAT webpage Inputs -&gt; Food balances (2010-) and Food balances (-2013), based on supply utilization accounts. We load and prepare the data. One element reported in these food balances is the supply per capita.\nFood balances for 2010-2021. Data downloaded on FAOSTAT webpage Inputs -&gt; , based on supply utilization accounts. We load and prepare the data. One element reported in these food balances is the supply per capita.\n\n\nCode\nf_prepare_food_supply &lt;- function(dataset, year_min, year_max){\n  #transform and prepare data\n  data &lt;- dataset %&gt;%\n    filter(\n      \n      #we do not dive into food subcategories\n      Item %in% c(\"Population\", \"Grand Total\"),\n      \n      #keep only proteins\n      Element %in% c(\n        \"Total Population - Both sexes\", \n        \"Protein supply quantity (g/capita/day)\", \n        \"Protein supply quantity (t)\")\n      ) %&gt;%\n    \n    #selects variables of interest, rename them\n    select(\n      country = Area, variable = Element, Unit, {{ year_min }}:{{ year_max }}\n      ) %&gt;%\n    \n    #years in 1 column\n    gather(\n      Year, value, {{ year_min }}:{{ year_max }}\n      ) %&gt;%\n    mutate(\n      \n      #add units to variable name\n      variable = paste0(variable, \" (\", Unit, \")\"),\n      \n      #transform years in integers\n      Year = as.integer(sub(\"^Y\", \"\", Year))\n    ) %&gt;%\n    \n    #remove units columns\n    select(\n      -Unit\n    ) %&gt;%\n    \n    #spread variables into columns\n    spread(\n      variable, value\n    )\n  \n  return(data)\n}\n\nf_food_supply_focus_N &lt;- function(dataset){\n  #conversion protein to N, and per day to per year\n  data &lt;- dataset %&gt;%\n    mutate(\n      `N supply (kg/cap/y)` = (`Protein supply quantity (g/capita/day) (g/cap/d)`/conversion_N_protein)*365/1000,\n      `Population (Mhab)` = `Total Population - Both sexes (1000 No)`/1000,\n      `N supply (kt/y)` = `N supply (kg/cap/y)`*`Population (Mhab)`\n      \n    ) %&gt;%\n    #keep only these latters\n    select(\n      country, Year, \n      `N supply (kg/cap/y)`, `N supply (kt/y)`, `Population (Mhab)`\n    )\n  \n  return(data)\n}\n\n#load original file 2010-2021\nfile_food_supply_balance_2010_2021 &lt;- read.csv(\"source/FAO/food_supply/balance_sheet_2010_2021/FoodBalanceSheets_E_All_Data/FoodBalanceSheets_E_All_Data_NOFLAG.csv\", check.names = FALSE)\n#correct turkey and cote d'ivoire encoding\nfile_food_supply_balance_2010_2021 &lt;- f_correct_encoding(file_food_supply_balance_2010_2021)\n\n#load original file 1961-2013\nfile_food_supply_balance_1961_2013 &lt;- read.csv(\"source/FAO/food_supply/balance_sheet_1961_2013/FoodBalanceSheetsHistoric_E_All_Data/FoodBalanceSheetsHistoric_E_All_Data_NOFLAG.csv\", check.names = FALSE)\n#correct turkey and cote d'ivoire encoding\nfile_food_supply_balance_1961_2013 &lt;- f_correct_encoding(file_food_supply_balance_1961_2013)\n\n\ndata_food_supply_balance_2010_2021 &lt;- f_prepare_food_supply(file_food_supply_balance_2010_2021, Y2010, Y2021) \ndata_food_supply_balance_2010_2021 &lt;- f_food_supply_focus_N(data_food_supply_balance_2010_2021)\n\ndata_food_supply_balance_1961_2013 &lt;- f_prepare_food_supply(file_food_supply_balance_1961_2013, Y1961, Y2013) \ndata_food_supply_balance_1961_2013 &lt;- f_food_supply_focus_N(data_food_supply_balance_1961_2013)\n\n\n\nComparisonsRelative discrepancies\n\n\n\n\nCode\ntemp &lt;- bind_rows(\n  data_food_supply_balance_1961_2013 %&gt;% mutate(source = \"balance sheet 1961-2013\"),\n  data_food_supply_balance_2010_2021 %&gt;% mutate(source = \"balance sheet 2010-2021\"),\n  data_food_supply_availability %&gt;% mutate(source = \"availability\")\n)\n\nggplot(temp %&gt;% filter(country==\"France\")) +\n  #availability 2010-2021\n  geom_line(\n    aes(Year, `N supply (kg/cap/y)`, color=source)\n    ) +\n  ylim(0, NA) +\n  labs(\n    x=\"\", title = \"Different FAO sources on N food supply\",\n    subtitle = \"Here for France\"\n  )\n\n\n\n\n\n\n\n\n\nSelect a country to see its historical balance sheets and food availability data.\n\n\nCode\nshared_data &lt;- SharedData$new(temp)\n\nvariable_filter_country &lt;-\n  filter_select(id=\"country_filter\", label=\"select a country\", sharedData=shared_data, group=~country)\n\ngg &lt;- ggplot(shared_data) +\n  #availability 2010-2021\n  geom_line(\n    aes(Year, `N supply (kg/cap/y)`, color=source, group=country)\n    ) +\n  ylim(0, NA) +\n  labs(\n    x=\"\"\n  )\n\nbscols(\n    list(\n      variable_filter_country,\n      ggplotly(gg, dynamicTicks=T)\n    )\n  )\n\n\n\n\n\n\nselect a country\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiscrepancy between balance sheet 1961-2013 and 2010-2021 (during the 2010-2013 period)\n\nall countriesby error category\n\n\n\n\nCode\ntemp1 &lt;- data_food_supply_balance_1961_2013 %&gt;%\n  filter(\n    Year %in% c(2010, 2011, 2012, 2013)\n    ) %&gt;%\n  select(\n    country, Year, supply_old = `N supply (kg/cap/y)`\n  )\n\ntemp2 &lt;- data_food_supply_balance_2010_2021 %&gt;%\n  filter(\n    Year %in% c(2010, 2011, 2012, 2013)\n    ) %&gt;%\n  select(\n    country, Year, supply_new = `N supply (kg/cap/y)`\n  )\n\ntemp &lt;- left_join(temp1, temp2, by=c(\"Year\", \"country\"))\n\ntemp &lt;- temp %&gt;%\n  mutate(\n    absolute_diff = supply_new-supply_old,\n    relative_diff = (supply_new-supply_old)/supply_old\n  ) %&gt;%\n  group_by(\n    country\n  ) %&gt;%\n  summarise(\n    absolute_diff = mean(absolute_diff, na.rm=T),\n    relative_diff = mean(relative_diff, na.rm=T)\n  )\n\ntemp &lt;- temp %&gt;%\n  mutate(\n    error = case_when(\n      (relative_diff &lt; -0.1) ~ \"&gt;10 % smaller\",\n      (relative_diff&gt;0.1) ~ \"&gt;10 % higher\",\n      (relative_diff&lt;0.05) & (relative_diff&gt;=0) ~ \"0 to 5 % higher\",\n      (relative_diff&lt;0.1) & (relative_diff&gt;=0.05) ~ \"5 to 10 % higher\",\n      (relative_diff&gt;-0.1) & (relative_diff&lt;=0) ~ \"-10 to 0 % smaller\"\n    )\n  )\n\n\n\n\nCode\ngg &lt;- ggplot(temp) +\n  geom_col(\n    aes(\n      reorder(country, relative_diff), relative_diff,\n      text=paste(\"Country:\", country, \"&lt;br&gt;Relative Difference:\", scales::percent(round(relative_diff, 2)))\n      )\n    ) +\n  theme(\n    axis.text.x = element_blank()\n    ) +\n  scale_y_continuous(\n    labels=scales::percent\n  ) +\n  labs(\n    x=\"\", y=\"relative difference\"\n    )\n\nggplotly(gg, tooltip = \"text\")\n\n\n\n\n\n\n\n\nCode\nf_graph_error_supply &lt;- function(error_range){\n\n  gg &lt;- ggplot(temp %&gt;% filter(\n    error ==error_range\n    )) +\n    geom_col(\n      aes(reorder(country, relative_diff), relative_diff)\n      ) +\n    theme(\n      axis.text.x = element_text(angle=90, hjust=1)\n      ) +\n    labs(x=\"\") +\n    facet_wrap(vars(error), scales = \"free_x\") +\n    scale_y_continuous(\n      labels = scales::percent\n    )\n\n  return(gg)\n\n}\n\n\n\n\n\n&gt;10 % smaller-10 to 0 % smaller0 to 5 % higher5 to 10 % higher5 to 10 % higher\n\n\n\n\nCode\nf_graph_error_supply(\"&gt;10 % smaller\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_error_supply(\"-10 to 0 % smaller\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_error_supply(\"0 to 5 % higher\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_error_supply(\"5 to 10 % higher\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nf_graph_error_supply(\"&gt;10 % higher\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe chose to focus on food supply from balance sheets 1961-2013 and use only 2014-2021 for the 2010-2021 data\n\n\nCode\n#gather the different periods of food supply\ndata_food_supply_countries &lt;- \n  bind_rows(\n    data_food_supply_balance_1961_2013,\n    data_food_supply_balance_2010_2021 %&gt;% filter(Year&gt;2013)\n  )\n\n#data for whole world\ndata_food_supply_world &lt;- data_food_supply_countries %&gt;%\n  filter(\n    country == \"World\" \n    )\n\n#data for countries\ndata_food_supply_countries &lt;- data_food_supply_countries %&gt;%\n  filter(\n    country !=\"World\"  #keep only countries and not regions (Africa, World, Central Asia...)\n    )\n\n\n\n\nCode\nrm(file_food_supply_availability, file_food_supply_balance_1961_2013, file_food_supply_balance_2010_2021)\nrm(temp, temp1, temp2)\nrm(shared_data, variable_filter_country)\n\n\n\n\nGathering the data\n\n\nCode\nf_prepare_gather_all_data &lt;- function(dataset_manure, dataset_fertilizers, dataset_balance, dataset_supply){\n  \n  #select variables of interest for manure\n  temp_manure &lt;- dataset_manure %&gt;%\n    filter(\n      variable %in% c(\n        \"Amount excreted in manure (ktN)\", \n        \"Manure management (treated) (ktN)\", \n        \"Losses from manure treated (ktN)\",\n        \"Manure applied to soils (ktN)\",\n        \"Manure left on pasture (ktN)\" \n        )\n      ) %&gt;%\n    mutate(\n      variable = paste(species, variable)\n      ) %&gt;%\n    ungroup() %&gt;%\n    select(\n      -species\n      ) %&gt;%\n    spread(variable, value)\n  \n  #select variables of interest for fertilizers: only focus on agricultural use\n  temp_fertilizers &lt;- dataset_fertilizers %&gt;%\n    select(\n      country, Year, nutrient, `Agricultural Use (t)`\n      ) %&gt;%\n    spread(\n      nutrient, `Agricultural Use (t)`\n      ) %&gt;%\n    rename(\n      `N mineral fertilization (ktN)` = `N total`,\n      `P mineral fertilization (ktP)` = `P total`,\n      `K mineral fertilization (ktK)` = `K total`\n    )\n  \n  \n  #select data from nutrient balance\n  temp_balance &lt;- dataset_balance %&gt;%\n    #transform tons to ktons\n    mutate(\n      `Cropland nitrogen (kt)` = `Cropland nitrogen (t)`/10^3\n      ) %&gt;%\n    \n    #do not focus on P and K, nor nutrient use efficiency\n    select(\n      country, flows, Year, `Cropland nitrogen (kt)`\n      ) %&gt;%\n    \n    #each variable in 1 different column\n    spread(flows, `Cropland nitrogen (kt)`) %&gt;%\n    \n    #select and rename variables of interest\n    select(\n      country, Year,\n      `N croplands Input (ktN)` = Input,\n      `N croplands Atmospheric Deposition (ktN)` = `Atmospheric Deposition`,\n      `N croplands Biological Fixation (ktN)` = `Biological Fixation`,\n      `N croplands Manure applied to Soils (ktN)`= `Manure applied to Soils`,\n      `N croplands Mineral fertilizers (ktN)` = `Mineral fertilizers`,\n       )\n  \n  \n  # gather food supply and fertilizer data\n  temp &lt;- left_join(\n    temp_fertilizers,\n    dataset_supply,\n    by=c(\"Year\", \"country\")\n    )\n  \n  # add manure\n  temp &lt;- left_join(\n    temp,\n    temp_manure,\n    by=c(\"Year\", \"country\")\n  )\n  \n  # add N balance\n  temp &lt;- left_join(\n    temp,\n    temp_balance,\n    by=c(\"Year\", \"country\")\n  )\n  \n  return(temp)\n  \n}\n\n\nsave data\n\n\nCode\n#save countries data\ntemp &lt;- f_prepare_gather_all_data(\n  data_manure_countries_simple, data_fertilizers_countries,\n  data_balance_countries, data_food_supply_countries\n)\nf_save_csv_files(\n  temp, \"output/\",\n  \"fao_manure_fertilizers_balance_food_supply_countries.csv\"\n)\n\n#save whole world data\ntemp &lt;- f_prepare_gather_all_data(\n  data_manure_world_simple, data_fertilizers_world,\n  data_balance_world, data_food_supply_world\n)\nf_save_csv_files(\n  temp, \"output/\",\n  \"fao_manure_fertilizers_balance_food_supply_world.csv\"\n)\n\n\n\n\nCode\nrm(list = ls())"
  },
  {
    "objectID": "potential.html",
    "href": "potential.html",
    "title": "potential",
    "section": "",
    "text": "This page synthesizes results on the agronomic potential of N in human excretions in Europe. We compare the total amount of N in human excretions to typical N inputs in agroecosystems: synthetic fertilizers, manure, total N inputs…\nRUSSIE ? pas juste indutrialized mais “rich industrialized” ?\n\n\nCode\nknitr::opts_chunk$set(message=F, warning=F, fig.align = \"center\",  dev='svg')\n\n# Load the function file\nsource(\"functions.R\")\n#included:\n#-function to save csv f_save_csv_files\n#-set the default scale_color and scale_fill to viridis theme\n#-loads the core tidyverse package\n\n#set theme for graphs\ntheme_set(\n  theme_classic() +\n  theme(\n    panel.grid.major.y = element_line(), #no vertical lines by default\n    #text = element_text(family = \"Times New Roman\"), #default font\n    plot.title = element_text(face=\"bold\"), #graphs titles in bolds\n    )\n  )\n\n\n#additional packages loaded\nlibrary(ggrepel) #for geom_text_repel\nlibrary(patchwork) #for multiple plots\n\nSource &lt;- \"based on FAOSTAT data for 2015-2020\"\nstandard_subtitle &lt;- \"highlighted: rich industrialized countries\"\n\npercent_food_waste &lt;- 0.25\npercent_food_waste_max &lt;- 0.3\npercent_food_waste_min &lt;- 0.05\npercent_N_urine &lt;- 0.85\n\nresolution_dpi &lt;- 350\ngrahps_height &lt;- 8\ngrahps_width &lt;- 8\n\n\n#Western\ncountries_to_select_western &lt;- c(\n  #Europe Nordics\n  \"Sweden\", \"Norway\", \"Finland\", \"Denmark\",\n  #Europe Northern and Central\n  \"Ireland\", \"UK\", \"Belgium\", \"Netherlands\", \"Switzerland\", \"Germany\", \"Austria\", \"Poland\", \n  #Europe Mediterranean\n  \"Portugal\", \"Spain\", \"France\", \"Italy\", \"Greece\",\n  \n  #Americas\n  \"USA\", \"Canada\",\n  \n  #Asia and Oceania\n  \"Australia\", \"New Zealand\", \"Japan\", \"Korea\", \"Taiwan\"\n)\n\n#extended countries\ncountries_to_select_extended &lt;- c(\n  #Americas\n  \"Brazil\",\n  \n  #Asia and Oceania\n  \"India\",\n  \n  #Africa\n  \"South Africa\", \"Nigeria\", \"Egypt\"\n)\n\n#function to select some countries in our dataset\nf_select_countries &lt;- function(dataset, countries_to_select){\n  dataset &lt;- dataset %&gt;%\n    filter(country %in% countries_to_select)\n  return(dataset)\n}\n\n#function to highlith some particular countries\nf_highlight_countries &lt;- function(dataset, highlighted_countries){\n  dataset &lt;- dataset %&gt;%\n    mutate(\n      highlight = case_when(\n        country %in% highlighted_countries~\"Yes\",\n        T ~ \"No\"\n        )\n      )\n  return(dataset)\n}\n\n\n\nLoad and prepare data\n\nLoad dataNew variables analyzedFood supply or actual ingestion ?\n\n\nLoad the cleaned FAO data (see in Data source presentation -&gt; FAO data).\n\n\nCode\n#load data (national for OneEarth, national and regional for STOTEN)\nfile_FAO_countries &lt;- read_csv(\"output/fao_manure_fertilizers_balance_food_supply_countries.csv\")\nfile_FAO_world &lt;- read_csv(\"output/fao_manure_fertilizers_balance_food_supply_world.csv\")\n\n#simplify name and remove some entities (mainly for our large countries plots)\nFAO_countries &lt;- file_FAO_countries %&gt;%\n  #remove particular entities\n  filter(\n    !country %in% c(\"China, mainland\") #gather mainland China (then simply renamed \"China\") and Taiwan\n    ) %&gt;%\n  #simplify some countries names\n  mutate(\n    country = case_when(\n      country == \"United Kingdom of Great Britain and Northern Ireland\" ~ \"UK\",\n      country == \"United States of America\" ~ \"USA\",\n      country == \"Republic of Korea\" ~ \"Korea\",\n      country == \"Iran (Islamic Republic of)\" ~ \"Iran\",\n      country == \"United Republic of Tanzania\" ~ \"Tanzania\",\n      country == \"Democratic Republic of the Congo\" ~ \"Dem. Rep. Congo\",\n      country == \"Russian Federation\" ~ \"Russia\",\n      country == \"China, Taiwan Province of\" ~ \"Taiwan\",\n      country == \"China, mainland\" ~ \"China\",\n      country == \"Netherlands (Kingdom of the)\" ~ \"Netherlands\",\n      T~country\n      )\n    )\n\n\n\n\nCompute additional variables for analysis.\n\n\nCode\n#function to compute some new variables (excretions or urine as share of N inputs, fertilizers or manue)\nf_compute_new_variables &lt;- function(dataset_FAO){\n  dataset_FAO &lt;- dataset_FAO %&gt;%\n  # compute new variables of interest\n    mutate(\n  \n      # food supply and excretion after food waste\n      `human excretions (ktN)` = `N supply (kt/y)`*(1-percent_food_waste),\n      `human urine (ktN)` = `human excretions (ktN)`*percent_N_urine,\n      \n      #   % fertilization (synthetic fertilizers, manure, total)\n      #fertilizers\n      `human excretions % of synthetic fertilization` = `human excretions (ktN)`/`N mineral fertilization (ktN)`,\n      `human urine % of synthetic fertilization` = `human urine (ktN)`/`N mineral fertilization (ktN)`,\n      #manure\n      `human excretions % of manure applied to soils` = `human excretions (ktN)`/`All Animals Manure applied to soils (ktN)`,\n      `human excretions % of ruminants applied to soils` = `human excretions (ktN)`/`ruminants Manure applied to soils (ktN)`,\n      `human excretions % of non ruminants applied to soils` = `human excretions (ktN)`/`non ruminants Manure applied to soils (ktN)`,\n      #total inputs\n      `human excretions % of croplands inputs` = `human excretions (ktN)`/`N croplands Input (ktN)`,\n      \n      # % livestock excretion\n      `human excretions % of livestock excretion` = `human excretions (ktN)`/`All Animals Amount excreted in manure (ktN)`,\n      `human excretions % of ruminant excretion` = `human excretions (ktN)`/`ruminants Amount excreted in manure (ktN)`,\n      `human excretions % of monogastric excretion` = `human excretions (ktN)`/`non ruminants Amount excreted in manure (ktN)`\n      )\n  \n  return(dataset_FAO)\n}\n\n#function to synthesize 2015-2020 mean\nf_synthesize_2015_2020 &lt;- function(dataset_FAO){\n  \n  dataset_FAO &lt;- dataset_FAO %&gt;%\n    filter(Year&gt;2014 & Year&lt;2020) %&gt;%\n    select(-Year) %&gt;%\n    group_by(country) %&gt;%\n    summarise_all(~mean(., na.rm=T))\n  \n  return(dataset_FAO)\n}\n\n#compute new variable for countries and world files\nFAO_countries &lt;- f_compute_new_variables(FAO_countries)\nFAO_world &lt;- f_compute_new_variables(file_FAO_world)\n\n#synthesize for countries and world files\nFAO_countries_2015_2020 &lt;- f_synthesize_2015_2020(FAO_countries)\nFAO_world_2015_2020 &lt;- f_synthesize_2015_2020(FAO_world)\n\n#get large countrie\ncountries_to_select_large &lt;- FAO_countries_2015_2020 %&gt;%\n  select(country, `Population (Mhab)`) %&gt;%\n  distinct() %&gt;%\n  filter(`Population (Mhab)`&gt;50) %&gt;%\n  pull(country)\n\n\n\n\nIn the original, data, what is called “total per capita ingestion” seems to be in reality the food supply before food waste. We show this in the graphs below. The points are surveys on actual ingestion / excretions. The white bars are the values reported in the study as “ingestion”. We computed the purple bars, removing 25% of the white bar (the food waste rate we assume). Purple bars have a better agreement with the surveys. We will thus use it in the following as a proxy for actual ingestion and excretion.\nrange: -5% to +25%\n\n\nCode\n(1-percent_food_waste_max)/(1-percent_food_waste)\n\n\n[1] 0.9333333\n\n\nCode\n(1-percent_food_waste_min)/(1-percent_food_waste)\n\n\n[1] 1.266667\n\n\n\n\nCode\nf_graph &lt;- function(\n    dataset,\n    variable_supply, variable_ingestion_excretion,\n    survey, y_label_supply, y_label_surveys, y_label_waste, breaks, minor_breaks\n    ){\n  #for x axis limit, to add text on th right\n  n_countries &lt;- length(unique(dataset$country))\n\n  #plot\n  ggplot(dataset) +\n    #columns on proxy for intake (supplya minus 25% waste) and error bar (5% to 30% food waste)\n    geom_col(\n      aes(\n        reorder(country, {{ variable_ingestion_excretion }}),\n        {{ variable_ingestion_excretion }}\n        ),\n      fill = \"#440154\", alpha=.5, width = .8\n      ) +\n    geom_errorbar(\n      aes(x=country, \n          ymin={{ variable_ingestion_excretion }}*(1-percent_food_waste_min)/(1-percent_food_waste),\n          ymax={{ variable_ingestion_excretion }}*(1-percent_food_waste_max)/(1-percent_food_waste)\n          ) ,\n      color=\"#440154\", width=.5\n    ) +\n    #columns on food supply\n    geom_col(\n      aes(\n        reorder(country, {{ variable_supply }}),\n        {{ variable_supply }}\n        ),\n      fill = \"transparent\", color=\"black\", width = .8, linewidth=.6\n      ) +\n    #points of literature review on actual intakes / excretion\n    geom_point(\n      data = survey,\n      aes(country, {{ variable_ingestion_excretion }}), size=3, color=\"#440154\"\n    ) +\n    theme(\n      axis.text.x = element_text(angle = 45, hjust=1),\n      panel.grid.minor.y= element_line(linewidth=.3)\n      ) +\n    coord_cartesian(\n      xlim=c(0, n_countries+10),\n      ylim=c(0, 7.5)\n      ) +\n    scale_y_continuous(\n      expand = c(0, 0), #so that x axis crosses Y axis at 0\n      breaks = seq(0, 10, by=breaks),\n      minor_breaks = seq(0, 10, by=minor_breaks)\n      ) +\n    #annotation supply minus 25% food waste\n    annotate(\n      \"text\", x=n_countries+1, y=y_label_waste, hjust=0, color=\"#440154\", fontface=\"bold.italic\",\n      label=\"purple bars:\\nfood supply minus\\n25% waste (proxy for\\ningestion / excretion)\\nand error bars\\nfor 5-30% waste\"\n      ) +\n    #annotation food supply\n    annotate(\n      \"text\", x=n_countries+1, y=y_label_supply, hjust=0, fontface=\"bold.italic\",\n      label=\"white bars:\\nfood waste (25%)\"\n      ) +\n    #annotation surveys\n    annotate(\n      \"text\", x=n_countries+1, y=y_label_surveys, hjust=0, fontface=\"bold.italic\", color=\"#440154\",\n      label=\"points:\\nreview on actual\\ningestion / excretion\"\n      ) +\n    #axis labels\n    labs(\n      x=\"\", caption=Source\n      )\n}\n\n#figures of literature review\nsurveys_N &lt;-  tibble(\n  country=c(\"Sweden\", \"Germany\", \"France\", \"Thailand\", \"USA\"),\n  `human excretions per cap (kgN/cap)` = c(4.5, 4.5, 4.6, 2.9, 4.5)\n  )\n\n\n\n\nCode\ntemp &lt;- FAO_countries_2015_2020 %&gt;%\n  mutate(\n    `human excretions per cap (kgN/cap)` = `human excretions (ktN)`/`Population (Mhab)`\n  )\ntemp &lt;- temp %&gt;%\n  filter(\n    country %in% c(\"USA\", \"Thailand\", \"Sweden\", \"Germany\", \"France\")\n  )\n\ngg &lt;- f_graph(\n  temp,\n  `N supply (kg/cap/y)`, `human excretions per cap (kgN/cap)`,\n  surveys_N,\n  y_label_supply = 6, y_label_surveys = 4.5, y_label_waste = 1.3,\n  breaks = 1, minor_breaks = .5\n  ) +\n  labs(y=\"kgN/cap/year\")\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"waste_supply_excretion\",\n  resolution_dpi, 6, 3.5\n)\n\n\n\n\n\n\n\nCode\n#function to plot national bar graphs \nf_graph_countries_bar &lt;- function(dataset, variable){\n  ggplot(dataset) +\n    \n    #countries bars and print % of highlighted values\n    geom_col(\n      aes(\n        reorder(country, {{ variable }}), \n        {{ variable }}, \n        fill=highlight\n        ),\n      alpha=.7\n      ) +\n    geom_text(\n      data = dataset %&gt;% filter(highlight == \"Yes\"),\n      aes(\n        x=country, y={{ variable }}, \n        label=paste0(round({{ variable }}*100), \"%\")\n        ),\n      vjust=-0.5, fontface=\"bold.italic\"\n      ) +\n    \n    #wolrd ba and print % of highlighted values\n    annotate(\n      geom=\"text\", x=\"World\", y= FAO_world_2015_2020 %&gt;% pull({{ variable }}), \n      label = paste0(round(FAO_world_2015_2020 %&gt;% pull({{ variable }})*100), \"%\"),\n      vjust=-0.5, fontface=\"bold.italic\"\n      ) +\n    geom_col(\n      data = FAO_world_2015_2020,\n      aes(country, {{ variable }}),\n      fill=\"red\"\n      ) +\n    \n    # rest of graph options\n    scale_y_continuous(\n      limits = c(0, NA),\n      labels = scales::percent,\n      breaks = seq(0, 1.5, by=0.1),\n      minor_breaks = seq(.1, 1.5, by=0.05)\n      ) +\n    theme(\n      legend.position = \"none\",\n      panel.grid.minor.y= element_line(linewidth=.3),\n      axis.text.x = element_text(angle = 45, hjust=1)\n      ) +\n    labs(\n      fill=\"large country &gt;35M habitants\",\n      x=\"\",\n      y=\"human excretions as % of\\nmineral N fertilizers consumption\"\n    ) +\n    guides(size=\"none\")\n}\n\n#function to add extended countried to bar graph\nf_graph_countries_bar_extended_countries &lt;- function(dataset, variable){\n    #countries bars and print % of highlighted values\n    gg &lt;- geom_col(\n      data = dataset,\n      aes(\n        reorder(country, {{ variable }}), \n        {{ variable }}\n        ),\n      fill=\"#440154\", alpha=.4\n      ) \n    \n    return(gg)\n}\n\n#function for historical data\nf_historical_graph &lt;- function(dataset, variable, y_lab, y_lim, y_breaks, y_minor_breaks){\n  \n  gg &lt;- ggplot(dataset) +\n    \n    #curves of countries highlighted, and their labels\n    geom_line(\n      data = dataset %&gt;% filter(highlight == \"Yes\", Year&lt;=2021),\n      aes(\n        Year, {{ variable }}, \n        group=country, color=country\n        ),\n      alpha=.9, linewidth=2\n      ) +\n    geom_text_repel(\n      data = dataset %&gt;% filter(highlight==\"Yes\", Year==2021),\n      aes(2021, {{ variable }}, label=country, color=country),\n      direction = \"y\", xlim = c(2021, NA), hjust=0\n      ) +\n    \n    #curves for world highlighted\n    geom_line(\n      data = FAO_world,\n      aes(Year, {{ variable }}), color=\"red\", linewidth=2\n      ) +\n    geom_text_repel(\n      data = FAO_world %&gt;% filter(Year==2021),\n      aes(2021, {{ variable }}, label=country),\n      direction = \"y\", xlim = c(2021, NA), hjust=0, color=\"red\"\n      ) +\n    \n    #curves of countries non highlighted\n    geom_line(\n      data = dataset %&gt;% filter(highlight == \"No\"),\n      aes(\n        Year, {{ variable }}, \n        group=country\n        ),\n      alpha=.15\n      ) +\n    \n    #other graph options\n    scale_y_continuous(\n      labels = scales::percent,\n      breaks = seq(0, 10^3, by=y_breaks),\n      minor_breaks = seq(0, 10^3, by=y_minor_breaks)\n      ) +\n    scale_x_continuous(\n      breaks = seq(1960, 2020, by=10)\n      ) +\n    coord_cartesian(\n      ylim = c(0, y_lim),\n      xlim = c(1960, 2025)\n      ) +\n    theme(\n      legend.position = \"none\",\n      panel.grid.minor.y= element_line(linewidth=.3),\n      axis.text.x = element_text(angle = 45, hjust=1)\n      ) +\n    labs(\n      x=\"\", color=\"\",\n      y=y_lab\n      ) \n  \n  return(gg)\n}\n\n\n\n\nCode\n#prepare inputs file\nf_prepare_inputs &lt;- function(dataset){\n  dataset &lt;- dataset %&gt;%select(\n    #ountry and population\n    country, `Population (Mhab)`, \n    \n    #total excretions and urine,\n    `human excretions (ktN)`, `human urine (ktN)`,\n    `human excretions % of croplands inputs`, `human urine % of synthetic fertilization`, \n    \n    #total fertilizers used\n    `N mineral fertilization (ktN)`,\n    \n    #inputs to croplands\n    `N croplands Input (ktN)`,\n    `N croplands Atmospheric Deposition (ktN)`, `N croplands Biological Fixation (ktN)`,\n    `N croplands Manure applied to Soils (ktN)`, `N croplands Mineral fertilizers (ktN)`,\n    \n    ) %&gt;%\n  \n  gather(\n    input_flow, value, \n    c(`N croplands Atmospheric Deposition (ktN)`, \n      `N croplands Biological Fixation (ktN)`, \n      `N croplands Manure applied to Soils (ktN)`, \n      `N croplands Mineral fertilizers (ktN)`)\n    ) %&gt;%\n  \n  mutate(\n    input_flow = gsub(\"N croplands \", \"\", input_flow),\n    input_flow = gsub(\" \\\\(ktN\\\\)\", \"\", input_flow)\n    ) \n  \n  return(dataset)\n}\ntemp_croplands_inputs &lt;- f_prepare_inputs(FAO_countries_2015_2020)\ntemp_croplands_inputs_world &lt;- f_prepare_inputs(FAO_world_2015_2020)\n\n\nf_graph_comparison_inputs_per_cap &lt;- function(dataset, variable_inputs, variable_order, variable_excretions){\n  data_excretions &lt;- dataset %&gt;%\n    select(country, `Population (Mhab)`, {{ variable_excretions }}, highlight) %&gt;%\n    distinct()\n  \n  #graph comparison absolute per cap : excretions vs inputs\n  gg &lt;- ggplot(dataset) +\n    \n    #bars columns inputs N in different colors, with highlighted industrialized countries\n    geom_col(\n      aes(\n        {{ variable_inputs }}/`Population (Mhab)`, reorder(country, {{ variable_order }}/`Population (Mhab)`),\n        fill=input_flow, alpha=highlight\n        )\n      ) +\n    scale_alpha_manual(values=c(\"No\"=.4, \"Yes\"=1), guide = FALSE) +\n    \n    #error bars of excretions, based on min and max values of excretions\n    geom_linerange(\n      data = data_excretions,\n      aes(\n        xmin={{ variable_excretions }}/`Population (Mhab)`*(1-percent_food_waste_min)/(1-percent_food_waste),\n        xmax={{ variable_excretions }}/`Population (Mhab)`*(1-percent_food_waste_max)/(1-percent_food_waste),\n        y=country, alpha=highlight,\n        color=\"excretions\"\n        )\n      ) +\n    \n    #points excretions N in red\n    geom_point(\n      data = data_excretions,\n      aes({{ variable_excretions }}/`Population (Mhab)`, country, color=\"excretions\", alpha=highlight)\n      ) +\n    scale_color_manual(values=\"red\") +\n    \n    #other options\n    scale_x_reverse(\n      breaks = seq(0, 1000, 10),\n      minor_breaks = seq(0, 1000, 5)\n      ) +\n    theme(\n      axis.text.y = element_text(hjust=0.5),\n      legend.position = c(0.35, 0.35),\n      axis.ticks.y = element_blank(),\n      axis.line.y = element_blank(),\n      panel.grid.major.y= element_blank(),\n      panel.grid.major.x= element_line(),\n      panel.grid.minor.x= element_line(),\n      ) +\n    labs(\n      y=\"\", x=\"kgN/capita\", color=\"\", fill=\"\"\n      ) \n  \n  return(gg)\n  \n}\n\nf_graph_comparison_inputs_per_cap_add_world &lt;- function(graph_countries, dataset_world, variable_inputs, variable_excretions){\n    \n    #columns, highlighted if western country\n    gg &lt;- graph_countries +\n    \n    #bars columns inputs N in different colors, with highlighted industrialized countries\n    geom_col(\n      data = dataset_world,\n      aes(\n        {{ variable_inputs }}/`Population (Mhab)`, country,\n        fill=input_flow\n        ),\n      alpha=.4\n      ) +\n    \n    #error bars of excretions, based on min and max values of excretions\n    geom_linerange(\n      data = dataset_world,\n      aes(\n        xmin={{ variable_excretions }}/`Population (Mhab)`*(1-percent_food_waste_min)/(1-percent_food_waste),\n        xmax={{ variable_excretions }}/`Population (Mhab)`*(1-percent_food_waste_max)/(1-percent_food_waste),\n        y=country,\n        color=\"excretions\"\n        ),\n      alpha=.4\n      ) +\n\n    #points excretions N in red\n    geom_point(\n      data = dataset_world,\n      aes({{ variable_excretions }}/`Population (Mhab)`, country, color=\"excretions\"),\n      alpha=.4\n      ) \n  return(gg)\n}\n\n\nf_graph_potential_percent &lt;- function(dataset, variable, variable_order){\n  \n  gg &lt;- ggplot(dataset) +\n    \n    #columns, highlighted if western country\n    geom_col(\n      aes(\n        {{ variable }}, reorder(country, {{ variable_order }}/`Population (Mhab)`), \n        alpha=highlight\n        )\n      ) +\n    scale_alpha_manual(values=c(\"No\"=.4, \"Yes\"=1), guide = FALSE) +\n    \n    #add % value atht the end of the column\n    geom_text(\n      aes(\n        {{ variable }}, country, \n        label = paste0(round({{ variable }}*100/5)*5, \"%\")\n        ),\n      hjust=0\n      ) +\n    geom_text(\n      aes(\n        {{ variable }}, country, \n        label = paste0(\n          \"(\",\n          round({{ variable }}*(1-percent_food_waste_max)/(1-percent_food_waste)*100), \n          \"-\",\n          round({{ variable }}*(1-percent_food_waste_min)/(1-percent_food_waste)*100),\n          \")\"\n          )\n        ),\n      hjust=-1.3, vjust=0.5, size=2, fontface=\"italic\"\n      ) +\n    \n    \n    #other options\n    theme(\n      axis.text.y = element_text(hjust=0.5),\n      axis.ticks.y = element_blank(),\n      axis.line.y = element_blank(),\n      panel.grid.major.y= element_blank(),\n      panel.grid.major.x= element_line(),\n      panel.grid.minor.x= element_line()\n      ) +\n    labs(\n      x=\"\", y=\"\"\n      ) +\n    coord_cartesian(\n      xlim = c(0, 1)\n      )  +\n    scale_x_continuous(\n      labels=scales::percent,\n      breaks=seq(0, 10, .2),\n      minor_breaks = seq(0, 10, .05)\n      ) \n    \n  return(gg)\n  \n}\n\nf_graph_potential_percent_add_world &lt;- function(graph_countries, dataset_world, variable){\n    \n    #columns, highlighted if western country\n    gg &lt;- graph_countries +\n      geom_col(\n      data = dataset_world,\n      aes(\n        {{ variable }}, country\n        ),\n      alpha=.4\n      ) +\n\n    #add % value atht the end of the column\n    geom_text(\n      data = dataset_world,\n      aes(\n        {{ variable }}, country,\n        label = paste0(round({{ variable }}*100/5)*5, \"%\")\n        ),\n      hjust=0\n      ) +\n    geom_text(\n      data = dataset_world,\n      aes(\n        {{ variable }}, country,\n        label = paste0(\n          \"(\",\n          round({{ variable }}*(1-percent_food_waste_max)/(1-percent_food_waste)*100/5)*5,\n          \"-\",\n          round({{ variable }}*(1-percent_food_waste_min)/(1-percent_food_waste)*100/5)*5,\n          \")\"\n          )\n        ),\n      hjust=-1.3, vjust=0.5, size=2, fontface=\"italic\"\n      )\n  return(gg)\n}\n\n\n\n\n% of excreted manure applied to soils\n\n\nCode\nf_prepare_share_manure_to_soil &lt;- function(dataset){\n  variable_subcategories_ruminants &lt;- c(\n  \"ruminants Amount excreted in manure (ktN)\", \n  \"ruminants Losses from manure treated (ktN)\", \n  \"ruminants Manure applied to soils (ktN)\", \n  \"ruminants Manure left on pasture (ktN)\"\n  )\n  variable_subcategories_non_ruminants &lt;- c(\n    \"non ruminants Amount excreted in manure (ktN)\", \n    \"non ruminants Losses from manure treated (ktN)\", \n    \"non ruminants Manure applied to soils (ktN)\", \n    \"non ruminants Manure left on pasture (ktN)\"\n  )\n  variable_subcategories_all &lt;- c(\n    \"All Animals Amount excreted in manure (ktN)\", \n    \"All Animals Losses from manure treated (ktN)\", \n    \"All Animals Manure applied to soils (ktN)\", \n    \"All Animals Manure left on pasture (ktN)\"\n  )\n  \n  #prepare ruminants\n  temp1 &lt;- dataset %&gt;%\n    select(country, all_of(variable_subcategories_ruminants)) %&gt;%\n    mutate(\n      percent_applied = `ruminants Manure applied to soils (ktN)`/`ruminants Amount excreted in manure (ktN)`,\n      species = \"ruminants\") %&gt;%\n    gather(subgroup, subgroup_value, -c(country, percent_applied, species)) \n  temp1$subgroup &lt;- gsub(\" \\\\(ktN\\\\)\", \"\", temp1$subgroup)\n  temp1$subgroup &lt;- gsub(\"ruminants \", \"\", temp1$subgroup)\n  \n  #prepare non ruminants\n  temp2 &lt;- dataset %&gt;%\n    select(country, all_of(variable_subcategories_non_ruminants)) %&gt;%\n    mutate(\n      percent_applied = `non ruminants Manure applied to soils (ktN)`/`non ruminants Amount excreted in manure (ktN)`,\n      species = \"non ruminants\") %&gt;%\n    gather(subgroup, subgroup_value, -c(country, percent_applied, species)) \n  temp2$subgroup &lt;- gsub(\" \\\\(ktN\\\\)\", \"\", temp2$subgroup)\n  temp2$subgroup &lt;- gsub(\"non ruminants \", \"\", temp2$subgroup)\n  \n  #prepare all\n  temp3 &lt;- dataset %&gt;%\n    select(country, all_of(variable_subcategories_all)) %&gt;%\n    mutate(\n      percent_applied = `All Animals Manure applied to soils (ktN)`/`All Animals Amount excreted in manure (ktN)`,\n      species = \"all livestock\") %&gt;%\n    gather(subgroup, subgroup_value, -c(country, percent_applied, species)) \n  temp3$subgroup &lt;- gsub(\" \\\\(ktN\\\\)\", \"\", temp3$subgroup)\n  temp3$subgroup &lt;- gsub(\"All Animals \", \"\", temp3$subgroup)\n  \n  #binds them together\n  temp &lt;- bind_rows(temp1, temp2, temp3)\n  \n  \n  temp &lt;- temp %&gt;%\n  filter(subgroup!=\"Amount excreted in manure\") %&gt;%\n  mutate(\n    subgroup = case_when(\n      subgroup == \"Manure left on pasture\" ~ \"Left on pasture\",\n      subgroup == \"Losses from manure treated\" ~ \"Collected but volatilized\\nduring storage\",\n      subgroup == \"Manure applied to soils\" ~ \"Collected and\\napplied to soils\"\n    )\n  )\n  \n  \n  #order categories for legend\n  variable_subcategories &lt;- c(\"Left on pasture\", \"Collected but volatilized\\nduring storage\", \"Collected and\\napplied to soils\")\n\n  temp$subgroup &lt;- factor(\n    temp$subgroup,\n    levels = c(variable_subcategories)\n  )\n  \n  return(temp)\n  \n}\ntemp_share_manure_soils &lt;- f_prepare_share_manure_to_soil(FAO_countries_2015_2020)\ntemp_share_manure_soils_world &lt;- f_prepare_share_manure_to_soil(FAO_world_2015_2020)\n\n\n\n\nCode\nf_graph_manure_applied_losses &lt;- function(dataset, dataset_world, countries_to_select){\n  \n  temp &lt;- dataset %&gt;% filter(country %in% countries_to_select)\n  \n  gg &lt;- ggplot() +\n    #countries\n    geom_col(\n      data = temp %&gt;% filter(subgroup != \"Amount excreted in manure\"),\n      aes(subgroup_value, reorder(country, percent_applied), fill=subgroup, alpha=highlight),\n      position = \"fill\"\n      ) +\n    scale_alpha_manual(values=c(\"No\"=.4, \"Yes\"=1), guide = FALSE) +\n    geom_text(\n      data = temp %&gt;% select(country, percent_applied, species) %&gt;% distinct(),\n      aes(0, country, label=paste0(round(percent_applied*100), \"%\")),\n      hjust=0, fontface=\"italic\", size=3\n      ) +\n    \n    #wolrd\n    geom_col(\n      data = dataset_world %&gt;% filter(subgroup != \"Amount excreted in manure\"),\n      aes(subgroup_value, country, fill=subgroup),\n      position = \"fill\", alpha=.4\n      ) +\n    geom_text(\n      data = dataset_world %&gt;% select(country, percent_applied, species) %&gt;% distinct(),\n      aes(0, country, label=paste0(round(percent_applied*100), \"%\")),\n      hjust=0, fontface=\"italic\", size=3\n      ) +\n    \n    \n    \n    scale_x_continuous(\n      labels = scales::percent,\n      breaks = seq(0, 1, 0.2)\n      ) +\n    theme(legend.position = \"top\") +\n    \n    #labels\n    labs(\n        color=\"\", x=\"\", y=\"\",\n        fill=\"repartition of\\nexcreted manure\",\n        title = \"Share of excreted manure collected and applied to soils\",\n        subtitle = standard_subtitle,\n        caption = Source\n      ) +\n      facet_wrap(vars(species))\n    \n  return(gg)\n}\n\n\n\n\nCode\ntemp &lt;- f_highlight_countries(temp_share_manure_soils, countries_to_select_western)\n\ngg &lt;- f_graph_manure_applied_losses(\n  temp, temp_share_manure_soils_world,\n  c(countries_to_select_large, countries_to_select_western)\n  )\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"fate_manure\",\n  resolution_dpi, grahps_height, grahps_width\n)\n\n\n\n\n% of synthetic fertilizers covered by urine\n\n2015-20201961-2020\n\n\n\n\nCode\n#select countries &gt; 50 Mhab and rich industrial countries\ntemp &lt;- temp_croplands_inputs %&gt;% filter(country %in% c(countries_to_select_large, countries_to_select_western))\n\n#highlight rich industrialized countries\ntemp &lt;- f_highlight_countries(temp, countries_to_select_western)\n\ngg1 &lt;- f_graph_comparison_inputs_per_cap(\n  temp %&gt;% filter(input_flow==\"Mineral fertilizers\"),\n  `N mineral fertilization (ktN)`, \n  `N mineral fertilization (ktN)`, \n  `human urine (ktN)`\n  ) +\n  scale_fill_manual(values=\"#fde725\") +\n  labs(subtitle = \"N in urine and fertilizers consumption\")\ngg1 &lt;- f_graph_comparison_inputs_per_cap_add_world(\n  gg1,\n  temp_croplands_inputs_world %&gt;% filter(input_flow==\"Mineral fertilizers\"),\n  `N mineral fertilization (ktN)`, \n  `human urine (ktN)`\n)\n\n\ngg2 &lt;- f_graph_potential_percent(\n  temp %&gt;% select(-c(value, input_flow)) %&gt;% distinct(), \n  `human urine % of synthetic fertilization`, \n  `N mineral fertilization (ktN)` \n  )  + labs(subtitle =\"% of fertilizers replaced by urine\")\ngg2 &lt;- f_graph_potential_percent_add_world(\n  gg2,\n  temp_croplands_inputs_world %&gt;% select(-c(value, input_flow)) %&gt;% distinct(), \n  `human urine % of synthetic fertilization`\n  )\n\n\ngg &lt;- gg1 + theme(axis.text.y = element_blank()) + gg2 + \n  plot_annotation(\n    title = \"Maximum potential substitution of synthetic fertilizers by human urine\",\n    subtitle = standard_subtitle,\n    caption = Source\n    )\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"share_urine_vs_synth_ferti\",\n  resolution_dpi, grahps_height, grahps_width\n)\n\n\n\n\n\n\nCode\n#select countries to show\ntemp &lt;- f_select_countries(FAO_countries, countries_to_select_western)\n\n#select countries to highlight\nhighlighted_countries &lt;- c(\"France\", \"UK\", \"Japan\", \"USA\")\ntemp &lt;- f_highlight_countries(temp, highlighted_countries)\n\n#graph\nf_historical_graph(\n  temp, \n  `human urine % of synthetic fertilization`,\n  \"human N urine as % of\\nsynthetic fertilizers\", \n  y_lim=NA, y_breaks = 0.2, y_minor_breaks = 0.05\n  ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n% of cropland inputs\n\n2015-20201960-2020\n\n\n\n\nCode\n#select countries &gt; 50 Mhab and rich industrialized countries\ntemp &lt;- temp_croplands_inputs %&gt;% filter(country %in% c(countries_to_select_large, countries_to_select_western))\n\n#highlight rich industrialized countries\ntemp &lt;- f_highlight_countries(temp, countries_to_select_western)\n\n\n#Graphs\ngg1 &lt;- f_graph_comparison_inputs_per_cap(\n  temp, value, `N croplands Input (ktN)`, `human excretions (ktN)` \n  ) + labs(fill=\"inputs to croplands\", subtitle = \"N in excretions vs cropland inputs\")\ngg1 &lt;- f_graph_comparison_inputs_per_cap_add_world(\n  gg1,\n  temp_croplands_inputs_world, value, `human excretions (ktN)` \n)\n\ngg2 &lt;- f_graph_potential_percent(\n  temp %&gt;% select(-c(value, input_flow)) %&gt;% distinct(), \n  `human excretions % of croplands inputs`, `N croplands Input (ktN)`\n  ) + labs(subtitle = \"excretions as % of cropland inputs\")\ngg2 &lt;- f_graph_potential_percent_add_world(\n  gg2,\n   temp_croplands_inputs_world %&gt;% select(-c(value, input_flow)) %&gt;% distinct(), \n  `human excretions % of croplands inputs`\n)\n\n\ngg &lt;- gg1 + theme(axis.text.y = element_blank()) + gg2 + \n  plot_annotation(\n    title = \"Human excretions compared to croplands N inputs\",\n    subtitle = standard_subtitle,\n    caption = Source\n    )\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"share_excretions_vs_cropland_ferti\",\n  resolution_dpi, grahps_height, grahps_width\n)\n\n\n\n\n\n\nCode\n#select countries to show\ntemp &lt;- f_select_countries(FAO_countries, countries_to_select_western)\n\n#select countries to highlight\nhighlighted_countries &lt;- c(\"France\", \"UK\", \"Japan\", \"USA\", \"Korea\", \"Italy\")\ntemp &lt;- f_highlight_countries(temp, highlighted_countries)\n\n#graph\nf_historical_graph(\n  temp, \n  `human excretions % of croplands inputs`,\n  \"human N excretions as % of\\ncroplands N inputs\", \n  y_lim=NA, y_breaks = 0.2, y_minor_breaks = 0.05\n  ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComparison cropland inputs / total N\n\n\nCode\nf_graph_ratio &lt;- function(dataset, dataset_world, var_numerator, var_denominator){\n  \n  dataset &lt;- dataset %&gt;%\n    mutate(\n      ratio = {{ var_numerator }}/{{ var_denominator }}\n    )\n  \n  dataset_world &lt;- dataset_world %&gt;%\n    mutate(\n      ratio = {{ var_numerator }}/{{ var_denominator }}\n    )\n  \n  ggplot(dataset) +\n    \n    #countries\n    geom_col(\n      aes(ratio, reorder(country, ratio), alpha=highlight),\n      fill=\"#440154\"\n      ) +\n    scale_alpha_manual(values=c(\"No\"=.4, \"Yes\"=.9), guide = FALSE) +\n    \n    #world\n    geom_col(\n      data = dataset_world,\n      aes(ratio, country),\n      fill=\"#440154\", alpha=.4\n      ) +\n    \n    #other options\n    scale_x_continuous(\n      labels=scales::percent,\n      breaks = seq(0, 2, .2),\n      minor_breaks = seq(0, 2, .1)\n    ) +\n    geom_vline(xintercept = 1, linetype=\"dashed\") +\n    theme(\n      panel.grid.major.y = element_blank(),\n      panel.grid.major.x = element_line(),\n      panel.grid.minor.x = element_line(),\n    ) +\n    labs(\n      y=\"\", x=\"\"\n    )\n  \n}\n\n\n\n\nCode\n#select countries &gt; 50 Mhab and rich industrialized countries\ntemp &lt;- f_select_countries(FAO_countries_2015_2020, c(countries_to_select_large, countries_to_select_western))\n\n#highlight rich industrialized countries\ntemp &lt;- f_highlight_countries(temp, countries_to_select_western)\n\ngg1 &lt;- f_graph_ratio(temp, FAO_world_2015_2020, `N croplands Manure applied to Soils (ktN)`, `All Animals Manure applied to soils (ktN)`) +\n  labs(\n    title = \"manure applied to soils\"\n    )\ngg2 &lt;- f_graph_ratio(temp, FAO_world_2015_2020, `N croplands Mineral fertilizers (ktN)`, `N mineral fertilization (ktN)`) +\n  labs(\n    title  = \"synthetic fertilizers\",\n    )\ngg &lt;- gg1 + gg2 +\n  plot_annotation(\n      title = \"Cropland fertilization as % of Total fertilization\",\n      subtitle = standard_subtitle,\n      caption = Source\n      )\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"total_vs_cropland_ferti\",\n  resolution_dpi, grahps_height, grahps_width\n)\n\n\n\n\n% manure applie handled and applied to soils (croplands and grasslands)\n\n\nCode\nrecovery_human_excretions &lt;- 0.8\n\nf_prepare_manure_to_soils &lt;- function(dataset){\n  #prepare inputs file\n  dataset &lt;- dataset %&gt;%\n    select(\n      #country and population\n      country, `Population (Mhab)`, \n      \n      #total excretions,\n      `human excretions (ktN)`, `human excretions % of manure applied to soils`,\n      \n      #inputs to croplands\n      `All Animals Manure applied to soils (ktN)`,\n      `non ruminants Manure applied to soils (ktN)`,\n      `ruminants Manure applied to soils (ktN)` \n  \n      \n      ) %&gt;%\n    \n    gather(\n      input_flow, value, \n      c(`non ruminants Manure applied to soils (ktN)`, \n        `ruminants Manure applied to soils (ktN)`)\n      ) %&gt;%\n    \n    mutate(\n      input_flow = gsub(\" Manure applied to soils \\\\(ktN\\\\)\", \"\", input_flow)\n      ) \n  \n  #order ruminants / non ruminants legend\n  dataset$input_flow &lt;- factor(\n    dataset$input_flow,\n    levels = c(\"ruminants\", \"non ruminants\")\n  )\n  \n  #apply recovery rate to human excretions\n  dataset &lt;- dataset %&gt;%\n    mutate(\n      `human excretions (ktN)` = `human excretions (ktN)` * recovery_human_excretions,\n      `human excretions % of manure applied to soils` = `human excretions % of manure applied to soils` * recovery_human_excretions\n      )\n  \n  return(dataset)\n  \n}\n\ntemp_manure_to_soils &lt;- f_prepare_manure_to_soils(FAO_countries_2015_2020)\ntemp_manure_to_soils_world &lt;- f_prepare_manure_to_soils(FAO_world_2015_2020)\n\n\n\n2015-2020\n\n\n\n\nCode\n#select countries &gt; 50 Mhab and rich industrialized countries\ntemp &lt;- f_select_countries(temp_manure_to_soils, c(countries_to_select_large, countries_to_select_western))\n\n#highlight rich industrialized countries\ntemp &lt;- f_highlight_countries(temp, countries_to_select_western)\n\n\n#Graphs\ngg1 &lt;- f_graph_comparison_inputs_per_cap(\n  temp, value, `All Animals Manure applied to soils (ktN)`, `human excretions (ktN)` \n  ) +\n  coord_cartesian(xlim=c(30, 0)) +\n  labs(\n    fill=\"manure applied to soils\", subtitle = \"human excretions compared to manure\"\n  )\ngg1 &lt;- f_graph_comparison_inputs_per_cap_add_world(\n  gg1,\n  temp_manure_to_soils_world, value, `human excretions (ktN)` \n)\n\n\ngg2 &lt;- f_graph_potential_percent(\n  temp %&gt;% select(-c(value, input_flow)) %&gt;% distinct(), \n  `human excretions % of manure applied to soils`, `All Animals Manure applied to soils (ktN)`\n  ) +\n  coord_cartesian(xlim = c(0, 2))  +\n  labs(\n    subtitle = \"human excretions as % of manure\"\n  )\ngg2 &lt;- f_graph_potential_percent_add_world(\n  gg2,\n  temp_manure_to_soils_world %&gt;% select(-c(value, input_flow)) %&gt;% distinct(), \n  `human excretions % of manure applied to soils`\n)\n\n\n\ngg &lt;- gg1 + theme(axis.text.y = element_blank()) + gg2 + \n  plot_annotation(\n    title = \"Human excretions (80% recovery) compared to manure applied to soils\",\n    subtitle = standard_subtitle,\n    caption = Source\n    )\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"share_excretions_vs_manure_applied\",\n  resolution_dpi, grahps_height, grahps_width\n)\n\n\n\n\n\n\n\n% manure applied to croplands\n\n\nCode\nrecovery_human_excretions &lt;- 0.8\n\nf_prepare_manure_to_croplands &lt;- function(dataset){\n  #prepare inputs file\n  dataset &lt;- dataset %&gt;%\n    select(\n      #country and population\n      country, `Population (Mhab)`, \n      \n      #total excretions,\n      `human excretions (ktN)`, \n      \n      #manure to croplands\n      `Manure applied to croplands (ktN)`  = `N croplands Manure applied to Soils (ktN)` \n  \n      ) %&gt;%\n    \n    mutate(\n      `human excretions % of manure applied to croplands` = `human excretions (ktN)`/`Manure applied to croplands (ktN)` \n    ) %&gt;%\n    \n    gather(\n      input_flow, value, `Manure applied to croplands (ktN)` \n      ) \n  \n  #apply recovery rate to human excretions\n  dataset &lt;- dataset %&gt;%\n    mutate(\n      `human excretions (ktN)` = `human excretions (ktN)` * recovery_human_excretions,\n      `human excretions % of manure applied to croplands` = `human excretions % of manure applied to croplands` * recovery_human_excretions\n      )\n  \n  return(dataset)\n  \n}\n\ntemp_manure_to_croplands &lt;- f_prepare_manure_to_croplands(FAO_countries_2015_2020)\ntemp_manure_to_croplands_world &lt;- f_prepare_manure_to_croplands(FAO_world_2015_2020)\n\n\n\n2015-2020\n\n\n\n\nCode\n#select countries &gt; 50 Mhab and rich industrialized countries\ntemp &lt;- f_select_countries(temp_manure_to_croplands, c(countries_to_select_large, countries_to_select_western))\n\n#highlight rich industrialized countries\ntemp &lt;- f_highlight_countries(temp, countries_to_select_western)\n\n\n#Graphs\ngg1 &lt;- f_graph_comparison_inputs_per_cap(\n  temp, value, value , `human excretions (ktN)` \n  ) +\n  scale_fill_manual(values = \"#35b779\") +\n  labs(\n    fill=\"\", subtitle = \"human excretions compared to manure\"\n  )\ngg1 &lt;- f_graph_comparison_inputs_per_cap_add_world(\n  gg1,\n  temp_manure_to_croplands_world, value, `human excretions (ktN)` \n)\n\ngg2 &lt;- f_graph_potential_percent(\n  temp, \n  `human excretions % of manure applied to croplands`, value\n  ) +\n  scale_fill_manual(values = \"#35b779\") +\n  coord_cartesian(xlim = c(0, 2))  +\n  labs(\n    subtitle = \"human excretions as % of manure\"\n  )\ngg2 &lt;- f_graph_potential_percent_add_world(\n  gg2,\n  temp_manure_to_croplands_world, \n  `human excretions % of manure applied to croplands`\n)\n\n\n\ngg &lt;- gg1 + theme(axis.text.y = element_blank()) + gg2 + \n  plot_annotation(\n    title = \"Human excretions (80% recovery) compared to manure applied to croplands\",\n    subtitle = standard_subtitle,\n    caption = Source\n    )\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"share_excretions_vs_manure_on_croplands\",\n  resolution_dpi, grahps_height, grahps_width\n)\n\n\n\n\n\n\n\n% manure excreted\n\n\nCode\nf_prepare_manue_excreted &lt;- function(dataset){\n  #prepare inputs file\n  dataset &lt;- dataset %&gt;%\n    select(\n      #country and population\n      country, `Population (Mhab)`, \n      \n      #total excretions,\n      `human excretions (ktN)`, `human excretions % of livestock excretion`,\n      \n      #inputs to croplands\n      `All Animals Amount excreted in manure (ktN)`,\n      `non ruminants Amount excreted in manure (ktN)`,\n      `ruminants Amount excreted in manure (ktN)`\n  \n      \n      ) %&gt;%\n    \n    gather(\n      input_flow, value, \n      c(`non ruminants Amount excreted in manure (ktN)`,\n        `ruminants Amount excreted in manure (ktN)`)\n      ) %&gt;%\n    \n    mutate(\n      input_flow = gsub(\" Amount excreted in manure \\\\(ktN\\\\)\", \"\", input_flow)\n      ) \n  \n  #order ruminants / non ruminants legend\n  dataset$input_flow &lt;- factor(\n    dataset$input_flow,\n    levels = c(\"ruminants\", \"non ruminants\")\n  )\n  \n  return(dataset)\n  \n}\ntemp_manure_excreted &lt;- f_prepare_manue_excreted(FAO_countries_2015_2020)\ntemp_manure_excreted_world &lt;- f_prepare_manue_excreted(FAO_world_2015_2020)\n\n\n\n2015-2020\n\n\n\n\nCode\n#select countries &gt; 50 Mhab and rich industrialized countries\ntemp &lt;- f_select_countries(temp_manure_excreted, c(countries_to_select_large, countries_to_select_western))\n\n#highlight rich industrialized countries\ntemp &lt;- f_highlight_countries(temp, countries_to_select_western)\n\n#Graphs\ngg1 &lt;- \n  f_graph_comparison_inputs_per_cap(\n    temp, value, \n    `All Animals Amount excreted in manure (ktN)`, \n    `human excretions (ktN)` \n    ) +\n  coord_cartesian(xlim = c(55, 0)) +\n  labs(\n    fill=\"manure excreted\", subtitle = \"human excretions compared manure\"\n    )\ngg1 &lt;- f_graph_comparison_inputs_per_cap_add_world(\n  gg1,\n  temp_manure_excreted_world, value,`human excretions (ktN)`\n  )\n\ngg2 &lt;- \n  f_graph_potential_percent(\n    temp %&gt;% select(-c(value, input_flow)) %&gt;% distinct(), \n    `human excretions % of livestock excretion`, \n    `All Animals Amount excreted in manure (ktN)`\n    ) +\n  coord_cartesian(xlim = c(0, 1.6))  +\n  labs(\n    subtitle = \"human excretions as % of manure\"\n    )\ngg2 &lt;- f_graph_potential_percent_add_world(\n  gg2, temp_manure_excreted_world %&gt;% select(-c(value, input_flow)) %&gt;% distinct(), \n  `human excretions % of livestock excretion`\n)\n\n\n\ngg &lt;- gg1 + theme(axis.text.y = element_blank()) + gg2 + \n  plot_annotation(\n    title = \"Human excretions compared to manure excretions\",\n    subtitle = standard_subtitle,\n    caption = Source\n    )\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"share_excretions_vs_manure\",\n  resolution_dpi, grahps_height, grahps_width\n)\n\n\n\n\n\n\n\nShare animal / vegetal food supply\nhttps://ourworldindata.org/grapher/daily-protein-supply-from-animal-and-plant-based-foods\n\n\nCode\nsupply_veg_anim &lt;- read_csv(\"source/daily-protein-supply-from-animal-and-plant-based-foods.csv\")\nsupply_veg_anim_world &lt;- supply_veg_anim %&gt;% filter(Entity==\"World\")\n\nf_prepare_food_supply &lt;- function(dataset){\n  \n  dataset &lt;- dataset %&gt;%\n    select(\n      country = Entity, Year, \n      animal = `Animal Products | 00002941 || Food available for consumption | 0674pc || grams of protein per day per capita`,\n      vegetal = `Vegetal Products | 00002903 || Food available for consumption | 0674pc || grams of protein per day per capita`\n      ) %&gt;%\n    mutate(\n      animal = animal*365/1000/6.25,\n      vegetal = vegetal*365/1000/6.25,\n      total_kgN_per_cap = animal + vegetal,\n      share_vegetal = vegetal/total_kgN_per_cap\n      )\n  \n  dataset &lt;- dataset %&gt;%\n    filter(Year&gt;2014 & Year &lt;2021) %&gt;%\n    select(-Year) %&gt;%\n    group_by(country) %&gt;%\n    summarise_all(mean)\n  \n  dataset &lt;- dataset %&gt;%\n    gather(\n      animal_or_vegetal, animal_or_vegetal_value, vegetal, animal\n    )\n  \n  return(dataset)\n  \n}\nsupply_veg_anim &lt;- f_prepare_food_supply(supply_veg_anim)\nsupply_veg_anim_world &lt;- f_prepare_food_supply(supply_veg_anim_world)\n\n\n\nsupply_veg_anim &lt;- supply_veg_anim %&gt;%\n  mutate(\n    country = case_when(\n      country==\"United Kingdom\" ~ \"UK\",\n      country==\"United States\" ~ \"USA\",\n      country==\"South Korea\" ~ \"Korea\",\n      country==\"Vietnam\" ~ \"Viet Nam\",\n      country==\"Democratic Republic of Congo\" ~ \"Dem. Rep. Congo\",\n      T ~ country\n    )\n  )\n\n\n\n\nCode\nf_graph_N_supply &lt;- function(dataset, dataset_world, var_animal_or_vegetal_value, var_share_vegetal){\n  \n  gg1 &lt;- ggplot(dataset) +\n    #countries\n    geom_col(\n      aes(animal_or_vegetal_value, reorder(country, {{ var_share_vegetal }}), fill={{ var_animal_or_vegetal_value }}, alpha=highlight),\n      position = \"fill\", color=\"black\"\n      ) +\n    scale_alpha_manual(values=c(\"No\"=.4, \"Yes\"=.9), guide = FALSE) +\n    geom_text(\n      data = dataset %&gt;% select(country, {{ var_share_vegetal }}) %&gt;% distinct(),\n      aes(0, country, label = paste0(round({{ var_share_vegetal }}*100), \"%\")),\n      hjust=1, fontface=\"italic\"\n    ) +\n    \n    #world\n    geom_col(\n      data = dataset_world,\n      aes(animal_or_vegetal_value, country, fill={{ var_animal_or_vegetal_value }}),\n      position = \"fill\", color=\"black\", alpha=.4,\n      ) +\n    geom_text(\n      data = dataset_world %&gt;% select(country, {{ var_share_vegetal }}) %&gt;% distinct(),\n      aes(0, country, label = paste0(round({{ var_share_vegetal }}*100), \"%\")),\n      hjust=1, fontface=\"italic\"\n    ) +\n    \n    \n    scale_x_reverse(\n      labels = scales::percent\n    ) +\n    theme(\n      axis.ticks.y = element_blank(),\n      axis.text.y = element_blank(),\n      axis.line.y = element_blank(),\n      legend.position = \"top\"\n    ) +\n    labs(\n      y=\"\", x=\"\", fill=\"\", subtitle = \"relative shares\"\n      )\n  \n  gg2 &lt;- ggplot(dataset) +\n    #countries\n    geom_col(\n      aes(animal_or_vegetal_value, reorder(country, {{ var_share_vegetal }}), fill={{ var_animal_or_vegetal_value }}, alpha=highlight)\n      )+\n    scale_alpha_manual(values=c(\"No\"=.4, \"Yes\"=.9), guide = FALSE) +\n    geom_col(\n      data = dataset %&gt;% select(country, total_kgN_per_cap, {{ var_share_vegetal }}) %&gt;% distinct(),\n      aes(total_kgN_per_cap, reorder(country, {{ var_share_vegetal }})),\n      fill=\"transparent\", color=\"black\"\n      ) +\n    geom_text(\n      data = dataset %&gt;% select(country, total_kgN_per_cap) %&gt;% distinct(),\n      aes(total_kgN_per_cap, country, label = round(total_kgN_per_cap, 1)),\n      hjust=-.3, fontface=\"italic\"\n    ) +\n    \n    #world\n    geom_col(\n      data = dataset_world,\n      aes(animal_or_vegetal_value, country, fill={{ var_animal_or_vegetal_value }}),\n      alpha=.4\n      )+\n    geom_col(\n      data = dataset_world %&gt;% select(country, total_kgN_per_cap, {{ var_share_vegetal }}) %&gt;% distinct(),\n      aes(total_kgN_per_cap, country),\n      fill=\"transparent\", color=\"black\"\n      ) +\n    geom_text(\n      data = dataset_world %&gt;% select(country, total_kgN_per_cap) %&gt;% distinct(),\n      aes(total_kgN_per_cap, country, label = round(total_kgN_per_cap, 1)),\n      hjust=-.3, fontface=\"italic\"\n    ) +\n    \n    \n    \n    theme(\n      legend.position = \"none\",\n      axis.text.y = element_text(hjust=0.5)\n      ) +\n    labs(y=\"\", x=\"kgN/cap\", subtitle = \"absolute quantities\") +\n    xlim(0, 8.5)\n  \n  gg &lt;- gg1 + gg2 + \n    plot_annotation(\n      title = \"Repartition of vegetal and animal products in N food supply\",\n      subtitle = standard_subtitle,\n      caption = Source\n      )\n  \n  return(gg)\n}\n\n\n\n\nCode\ntemp &lt;- supply_veg_anim %&gt;% filter(country %in% c(countries_to_select_western, countries_to_select_large))\ntemp &lt;- f_highlight_countries(temp, countries_to_select_western)\n\ngg &lt;- f_graph_N_supply(temp, supply_veg_anim_world, animal_or_vegetal, share_vegetal)\ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"food_supply_animal_vegetal\",\n  resolution_dpi, grahps_height, grahps_width\n)\n\n\n:::\n\n\nShare ruminants vs non ruminants\n\n\nCode\ntemp &lt;- f_select_countries(FAO_countries_2015_2020, c(countries_to_select_large, countries_to_select_western))\n\n\nf_prepare_share_ruminants &lt;- function(dataset) {\n  temp &lt;- dataset %&gt;%\n    select(\n      country,\n      `All Animals Amount excreted in manure (ktN)`, \n      `non ruminants Amount excreted in manure (ktN)`, \n      `ruminants Amount excreted in manure (ktN)`\n      ) %&gt;%\n    mutate(\n      `non ruminants` = `non ruminants Amount excreted in manure (ktN)`/`All Animals Amount excreted in manure (ktN)`,\n      ruminants = `ruminants Amount excreted in manure (ktN)`/`All Animals Amount excreted in manure (ktN)`\n    ) %&gt;%\n    select(country, `non ruminants`, ruminants)\n  \n  temp$country &lt;- factor(\n    temp$country,\n    levels = arrange(temp, `non ruminants`) %&gt;% pull(country)\n  )\n  \n  temp &lt;- temp %&gt;%\n    gather(\n      livestock_type, value, `non ruminants`, ruminants\n    )\n  \n  temp$livestock_type &lt;- factor(\n    temp$livestock_type,\n    levels = c(\"ruminants\", \"non ruminants\")\n  )\n  \n  return(temp)\n  \n}\ntemp &lt;- f_prepare_share_ruminants(temp)\ntemp_world &lt;- f_prepare_share_ruminants(FAO_world_2015_2020)\ntemp &lt;- f_highlight_countries(temp, countries_to_select_western)\n\n\n\n\ngg &lt;- ggplot(temp) +\n  \n  #countries bars and labels\n  geom_col(aes(value, country, fill=livestock_type, alpha=highlight)) +\n  scale_alpha_manual(values=c(\"No\"=.4, \"Yes\"=1), guide = FALSE) +\n  geom_text(\n    data = temp %&gt;% filter(livestock_type==\"non ruminants\"),\n    aes(0, country, label = paste(round(value*100), \"%\")),\n    hjust=0\n  ) +\n  \n  #world\n  geom_col(\n    data = temp_world,\n    aes(value, country, fill=livestock_type),\n    alpha=.7\n    ) +\n  geom_text(\n    data = temp_world %&gt;% filter(livestock_type==\"non ruminants\"),\n    aes(0, country, label = paste(round(value*100), \"%\")),\n    hjust=0\n  ) +\n  \n  #other options\n  scale_x_continuous(\n    labels = scales::percent\n  ) +\n  labs(\n    x=\"\", y=\"\", fill=\"\",\n    subtitle = standard_subtitle,\n    title = \"% of non ruminants excretions in total livestock excretions\",\n    caption = Source\n    ) \ngg\n\n\n\n\n\n\n\n\n\nCode\nf_save_graph_pdf_png(\n  gg, \"graph/potential/\", \"share_non_ruminants_excretions\",\n  resolution_dpi, grahps_height, 7\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nrm(list = ls())"
  }
]